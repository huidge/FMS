<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="clb.core.order.mapper.OrdOrderMapper">
    <resultMap id="BaseResultMap" type="clb.core.order.dto.OrdOrder">
        <result column="ORDER_ID" property="orderId" jdbcType="DECIMAL" />
        <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
        <result column="POLICY_NUMBER" property="policyNumber" jdbcType="VARCHAR" />
        <result column="PAY_NUMBER" property="payNumber" jdbcType="VARCHAR" />
        <result column="CUSTOMER_NUMBER" property="customerNumber" jdbcType="VARCHAR" />
        <result column="COMPANY_CHANNEL_ID" property="companyChannelId" jdbcType="DECIMAL" />
        <result column="CHANNEL_ID" property="channelId" jdbcType="DECIMAL" />
        <result column="TRANSFORM_CHANNEL_ID" property="transformChannelId" jdbcType="DECIMAL" />
        <result column="CONTRACT_ROLE_ID" property="contractRoleId" jdbcType="DECIMAL" />
        <result column="PRODUCT_SUPPLIER_ID" property="productSupplierId" jdbcType="DECIMAL" />
        <result column="ITEM_ID" property="itemId" jdbcType="DECIMAL" />
        <result column="SUBLINE_ID" property="sublineId" jdbcType="DECIMAL" />
        <result column="CURRENCY" property="currency" jdbcType="VARCHAR" />
        <result column="PAY_METHOD" property="payMethod" jdbcType="VARCHAR" />
        <result column="YEAR_PAY_AMOUNT" property="yearPayAmount" jdbcType="DECIMAL" />
        <result column="POLICY_AMOUNT" property="policyAmount" jdbcType="DECIMAL" />
        <result column="APPLICANT_CUSTOMER_ID" property="applicantCustomerId" jdbcType="DECIMAL" />
        <result column="INSURANT_CUSTOMER_ID" property="insurantCustomerId" jdbcType="DECIMAL" />
        <result column="INCREASE_FLAG" property="increaseFlag" jdbcType="VARCHAR" />
        <result column="SUBMIT_DATE" property="submitDate" jdbcType="TIMESTAMP" />
        <result column="RESERVE_DATE" property="reserveDate" jdbcType="TIMESTAMP" />
        <result column="RESERVE_ARRIVAL_DATE" property="reserveArrivalDate" jdbcType="TIMESTAMP" />
        <result column="RESERVE_CHECK_DATE" property="reserveCheckDate" jdbcType="TIMESTAMP" />
        <result column="SIGN_DATE" property="signDate" jdbcType="TIMESTAMP" />
        <result column="EFFECTIVE_DATE" property="effectiveDate" jdbcType="DATE" />
        <result column="APPROVE_DATE" property="approveDate" jdbcType="DATE" />
        <result column="EXPECT_COOL_DATE" property="expectCoolDate" jdbcType="DATE" />
        <result column="FIRST_PAY_DATE" property="firstPayDate" jdbcType="DATE" />
        <result column="RENEWAL_DUE_DATE" property="renewalDueDate" jdbcType="DATE" />
        <result column="RENEWAL_SUCCESS_DATE" property="renewalSuccessDate" jdbcType="DATE" />
        <result column="GRACE_DATE" property="graceDate" jdbcType="DATE" />
        <result column="ADMINISTRATIVE_DATE" property="administrativeDate" jdbcType="DATE" />
        <result column="STATUS" property="status" jdbcType="VARCHAR" />
        <result column="CLUB_CONFIRM_STATUS" property="clubConfirmStatus" jdbcType="VARCHAR" />
        <result column="CUSTOMER_CONFIRM_STATUS" property="customerConfirmStatus" jdbcType="VARCHAR" />
        <result column="APPLICATION_STATUS" property="applicationStatus" jdbcType="VARCHAR" />
        <result column="CUSTOMER_USER_ID" property="customerUserId" jdbcType="DECIMAL" />
        <result column="SMS_FLAG" property="smsFlag" jdbcType="VARCHAR" />
        <result column="CUSTOMER_OPERATE_DATE" property="customerOperateDate" jdbcType="TIMESTAMP" />
        <result column="HK_CONTACT_PERSON" property="hkContactPerson" jdbcType="VARCHAR" />
        <result column="HK_CONTACT_PHONE_CODE" property="hkContactPhoneCode" jdbcType="VARCHAR" />
        <result column="HK_CONTACT_PHONE" property="hkContactPhone" jdbcType="VARCHAR" />
        <result column="HK_CONTACT_PHONE_ALL" property="hkContactPhoneAll" jdbcType="VARCHAR" />
        <result column="RECEIPT_DATE" property="receiptDate" jdbcType="TIMESTAMP" />
        <result column="QUICK_CHECK_FLAG" property="quickCheckFlag" jdbcType="VARCHAR" />
        <result column="ELE_INSURANCE_FLAG" property="eleInsuranceFlag" jdbcType="VARCHAR" />
        <result column="FILL_USER_ID" property="fillUserId" jdbcType="DECIMAL" />
        <result column="SIGN_ASSISTANT" property="signAssistant" jdbcType="VARCHAR" />
        <result column="SIGN_ASSISTANT_NAME" property="signAssistantName" jdbcType="VARCHAR" />
        <result column="ARRIVAL_DATE" property="arrivalDate" jdbcType="TIMESTAMP" />
        <result column="LEAVE_DATE" property="leaveDate" jdbcType="TIMESTAMP" />
        <result column="PHONE_FLAG" property="phoneFlag" jdbcType="VARCHAR" />
        <result column="CONTACT_PERSON" property="contactPerson" jdbcType="VARCHAR" />
        <result column="CONTACT_PHONE" property="contactPhone" jdbcType="VARCHAR" />
        <result column="SIGN_ADDRESS" property="signAddress" jdbcType="VARCHAR" />
        <result column="MEET_ADDRESS" property="meetAddress" jdbcType="VARCHAR" />
        <result column="RESERVE_SUPPLIER_ID" property="reserveSupplierId" jdbcType="DECIMAL" />
        <result column="RESERVE_COMMENT" property="reserveComment" jdbcType="VARCHAR" />
        <result column="RESERVE_USER_ID" property="reserveUserId" jdbcType="DECIMAL" />
        <result column="SIGN_SUPPLIER_ID" property="signSupplierId" jdbcType="DECIMAL" />
        <result column="SIGN_PERSON" property="signPerson" jdbcType="VARCHAR" />
        <result column="EXPRESS_DELIVERY_INFO" property="expressDeliveryInfo" jdbcType="VARCHAR" />
        <result column="RECEPTION_USER_ID" property="receptionUserId" jdbcType="DECIMAL" />
        <result column="REVIEWER1" property="reviewer1" jdbcType="VARCHAR" />
        <result column="REVIEWER1_DATE" property="reviewer1Date" jdbcType="TIMESTAMP" />
        <result column="REVIEWER2" property="reviewer2" jdbcType="VARCHAR" />
        <result column="REVIEWER2_DATE" property="reviewer2Date" jdbcType="TIMESTAMP" />
        <result column="REVIEWER_COMMENT" property="reviewerComment" jdbcType="VARCHAR" />
        <result column="REVIEWER1_NAME" property="reviewer1Name" jdbcType="VARCHAR" />
        <result column="REVIEWER2_NAME" property="reviewer2Name" jdbcType="VARCHAR" />
        <result column="SEND_USER_ID" property="sendUserId" jdbcType="DECIMAL" />
        <result column="SEND_DATE" property="sendDate" jdbcType="TIMESTAMP" />
        <result column="SEND_STATUS" property="sendStatus" jdbcType="VARCHAR" />
        <result column="PLAN_FILE_ID" property="planFileId" jdbcType="DECIMAL" />
        <result column="REQ_FILE_ID" property="reqFileId" jdbcType="DECIMAL" />
        <result column="NEXT_POLICY_AMOUNT" property="nextPolicyAmount" jdbcType="DECIMAL" />
        <result column="NEXT_POLICY_DUE_DATE" property="nextPolicyDueDate" jdbcType="TIMESTAMP" />
        <result column="FIRST_PAYMENT_METHOD" property="firstPaymentMethod" jdbcType="VARCHAR" />
        <result column="RENEWAL_PAYMENT_METHOD" property="renewalPaymentMethod" jdbcType="VARCHAR" />
        <result column="RENEWAL_OTHER" property="renewalOther" jdbcType="VARCHAR" />
        <result column="PROGRAM_ID" property="programId" jdbcType="DECIMAL" />
        <result column="REQUEST_ID" property="requestId" jdbcType="DECIMAL" />
        <result column="ITEM" property="item" jdbcType="VARCHAR" />
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
        <result column="COMPANY_CHANNEL_NAME" property="companyChannelName" jdbcType="VARCHAR" />
        <result column="CHANNEL_NAME" property="channelName" jdbcType="VARCHAR" />
        <result column="APPLICANT" property="applicant" jdbcType="VARCHAR" />
        <result column="INSURANT" property="insurant" jdbcType="VARCHAR" />
        <result column="SIGN_SUPPLIER_NAME" property="signSupplierName" jdbcType="VARCHAR" />
        <result column="RESERVE_SUPPLIER_NAME" property="reserveSupplierName" jdbcType="VARCHAR" />
        <result column="ORDER_INFO" property="orderInfo" jdbcType="VARCHAR" />
        <result column="CUSTOMER_EMPLOYEE_NAME" property="customerEmployeeName" jdbcType="VARCHAR" />
        <result column="FILL_EMPLOYEE_NAME" property="fillEmployeeName" jdbcType="VARCHAR" />
        <result column="SEND_EMPLOYEE_NAME" property="sendEmployeeName" jdbcType="VARCHAR" />
        <result column="OWN_SUPPLIER_ID" property="ownSupplierId" jdbcType="DECIMAL" />
        <result column="OWN_SUPPLIER_NAME" property="ownSupplierName" jdbcType="VARCHAR" />
        <result column="MIDDLE_SUPPLIER_NAME" property="middleSupplierName" jdbcType="VARCHAR" />
        <result column="INSURANCE_SUPPLIER_NAME" property="insuranceSupplierName" jdbcType="VARCHAR" />
        <result column="STATUS_DESC" property="statusDesc" jdbcType="VARCHAR" />
        <result column="DDA_FLAG" property="ddaFlag" jdbcType="VARCHAR" />
        <result column="DDA_SUBMIT_DATE" property="ddaSubmitDate" jdbcType="TIMESTAMP" />
        <result column="DDA_EFFECTIVE_DATE" property="ddaEffectiveDate" jdbcType="TIMESTAMP" />
        <result column="FEEDBACK_BALANCE" property="feedbackBalance" jdbcType="DECIMAL" />
        <result column="ACCOUNT_BALANCE" property="accountBalance" jdbcType="DECIMAL" />
        <result column="BALANCE_CURRENCY" property="balanceCurrency" jdbcType="VARCHAR" />
        <result column="BALANCE_PAYMENT_METHOD" property="balancePaymentMethod" jdbcType="VARCHAR" />
        <result column="ITEM_NAME" property="itemName" jdbcType="VARCHAR" />
        <result column="PRODUCT_SUPPLIER_NAME" property="productSupplierName" jdbcType="VARCHAR" />
        <result column="SUBLINE_ITEM_NAME" property="sublineItemName" jdbcType="VARCHAR" />
        <result column="TR_CHANNEL_COUNT" property="trChannelCount" jdbcType="DECIMAL" />
        <result column="TR_SUPPLIER_COUNT" property="trSupplierCount" jdbcType="DECIMAL" />
        <result column="INTRODUCER" property="introducer" jdbcType="VARCHAR" />
        <result column="INTRODUCER_NAME" property="introducerName" jdbcType="VARCHAR" />
        <result column="INTRODUCE_BENEFIT" property="introduceBenefit" jdbcType="VARCHAR" />
        <result column="INSURANT_BIRTH_DATE" property="insurantBirthDate" jdbcType="TIMESTAMP" />
        <result column="SIGN_FEE" property="signFee" jdbcType="DECIMAL" />
        <result column="CARD_FEE" property="cardFee" jdbcType="DECIMAL" />
        <result column="PAY_PERIODS" property="payPeriods" jdbcType="DECIMAL" />
        <result column="FUNCTION_CODE" property="functionCode" jdbcType="VARCHAR" />
        <result column="APPLICANT_SEX" property="applicantSex" jdbcType="VARCHAR" />
        <result column="ORDER_TYPE" property="orderType" jdbcType="VARCHAR" />
        <result column="STOCK_CODE" property="stockCode" jdbcType="VARCHAR" />
        <result column="ANNUAL_INTEREST" property="annualInterest" jdbcType="VARCHAR" />
        <result column="DIVIDEND_PERIOD" property="dividendPeriod" jdbcType="VARCHAR" />
        <result column="SUBSCRIPTION_FEE" property="subscriptionFee" jdbcType="VARCHAR" />
        <result column="CUSTODY_FEE" property="custodyFee" jdbcType="VARCHAR" />
        <result column="ISSUE_DATE" property="issueDate" jdbcType="TIMESTAMP" />
        <result column="DIVIDEND_DATE1" property="dividendDate1" jdbcType="TIMESTAMP" />
        <result column="DIVIDEND_DATE2" property="dividendDate2" jdbcType="TIMESTAMP" />
        <result column="DIVIDEND_DATE" property="dividendDate" jdbcType="VARCHAR" />
        <result column="PRODUCT_MANAGER" property="productManager" jdbcType="VARCHAR" />
        <result column="PRODUCT_MANAGER_PHONE" property="productManagerPhone" jdbcType="VARCHAR" />
        <result column="RESERVE_CONTACT_PERSON" property="reserveContactPerson" jdbcType="VARCHAR" />
        <result column="RESERVE_CONTACT_PHONE_CODE" property="reserveContactPhoneCode" jdbcType="VARCHAR" />
        <result column="RESERVE_CONTACT_PHONE" property="reserveContactPhone" jdbcType="VARCHAR" />
        <result column="CIES_FLAG" property="ciesFlag" jdbcType="VARCHAR" />
        <result column="CIES_PROCESS_RATE" property="ciesProcessRate" jdbcType="VARCHAR" />
        <result column="INVESTED_ITEM" property="investedItem" jdbcType="VARCHAR" />
        <result column="INVESTED_OTHER" property="investedOther" jdbcType="VARCHAR" />
        <result column="INVESTED_SUBLINE" property="investedSubline" jdbcType="VARCHAR" />
        <result column="CONTRACT_FILE_ID" property="contractFileId" jdbcType="DECIMAL" />
        <result column="MIGRATE_COUNTRY" property="migrateCountry" jdbcType="VARCHAR" />
        <result column="BUDGET" property="budget" jdbcType="DECIMAL" />
        <result column="RELATED_ORDER_ID" property="relatedOrderId" jdbcType="DECIMAL" />
        <result column="RELATED_ORDER_NUMBER" property="relatedOrderNumber" jdbcType="VARCHAR" />
        <result column="CUSTOMER_PRICE" property="customerPrice" jdbcType="VARCHAR" />
        <result column="PRICE" property="price" jdbcType="VARCHAR" />
        <result column="PEOPLE_COUNT" property="peopleCount" jdbcType="DECIMAL" />
        <result column="PAY_AMOUNT" property="payAmount" jdbcType="DECIMAL" />
        <result column="VEHICLE_TYPE" property="vehicleType" jdbcType="VARCHAR" />
        <result column="USER_HOUR" property="userHour" jdbcType="VARCHAR" />
        <result column="DEPARTURE" property="departure" jdbcType="VARCHAR" />
        <result column="DESTINATION" property="destination" jdbcType="VARCHAR" />
        <result column="LODGER_NAME" property="lodgerName" jdbcType="VARCHAR" />
        <result column="LODGER_PINYIN" property="lodgerPinyin" jdbcType="VARCHAR" />
        <result column="CUSTOMER_PHONE_CODE" property="customerPhoneCode" jdbcType="VARCHAR" />
        <result column="CUSTOMER_PHONE" property="customerPhone" jdbcType="VARCHAR" />
        <result column="PRICE_INTERVAL" property="priceInterval" jdbcType="VARCHAR" />
        <result column="CHECKIN_DATE" property="checkinDate" jdbcType="TIMESTAMP" />
        <result column="CHECKOUT_DATE" property="checkoutDate" jdbcType="TIMESTAMP" />
        <result column="ROOM_COUNT" property="roomCount" jdbcType="DECIMAL" />
        <result column="ROOM_TYPE" property="roomType" jdbcType="VARCHAR" />
        <result column="HOTEL_NAME" property="hotelName" jdbcType="VARCHAR" />
        <result column="VACCINE_CUSTOMER_NAME" property="vaccineCustomerName" jdbcType="VARCHAR" />
        <result column="VACCINE_CUSTOMER_AGE" property="vaccineCustomerAge" jdbcType="DECIMAL" />
        <result column="VACCINE_CUSTOMER_SEX" property="vaccineCustomerSex" jdbcType="VARCHAR" />
        <result column="VACCINE_CUSTOMER_PASS" property="vaccineCustomerPass" jdbcType="VARCHAR" />
        <result column="VACCINE_CUSTOMER_TIMES" property="vaccineCustomerTimes" jdbcType="VARCHAR" />
        <result column="KEEP_FLAG" property="keepFlag" jdbcType="VARCHAR" />
        <result column="AGREED_PAYMENT_DATE" property="agreedPaymentDate" jdbcType="TIMESTAMP" />
        <result column="VALUEADD_TYPE" property="valueaddType" jdbcType="VARCHAR" />
        <result column="SECURITY_LEVEL" property="securityLevel" jdbcType="VARCHAR" />
        <result column="SECURITY_REGION" property="securityRegion" jdbcType="VARCHAR" />
        <result column="SELFPAY" property="selfpay" jdbcType="VARCHAR" />
        <result column="MIN_CLASS" property="minClass" jdbcType="VARCHAR" />
        <result column="SAME_FLAG" property="sameFlag" jdbcType="VARCHAR" />
        <result column="CHANNEL_CONTRACT_ID" property="channelContractId" jdbcType="DECIMAL" />
        <result column="PREPAY_FLAG" property="prepayFlag" jdbcType="VARCHAR" />
        <result column="DEAL_PATH" property="dealPath" jdbcType="VARCHAR" />
        <result column="APPLICANT_CHINESE_NAME" property="applicantChineseName" jdbcType="VARCHAR" />
        <result column="APPLICANT_ENGLISH_NAME" property="applicantEnglishName" jdbcType="VARCHAR" />
        <result column="APPLICANT_BIRTH_DATE" property="applicantbirthDate"/>
        <result column="APPLICANT_IDENTITY_NUMBER" property="applicantIdentityNumber"/>
        <result column="APPLICANT_NATIONALITY" property="applicantNationality"/>
        <result column="APPLICANT_CITY" property="applicantCity"/>
        <result column="APPLICANT_MARRIAGE_STATUS" property="applicantMarriageStatus"/>
        <result column="APPLICANT_PHONE" property="applicantPhone"/>
        <result column="APPLICANT_PHONE_CODE" property="applicantPhoneCode"/>
        <result column="APPLICANT_EMAIL" property="applicantEmail"/>
        <result column="APPLICANT_POST_ADDRESS" property="applicantPostAddress"/>
        <result column="APPLICANT_JOB" property="applicantJob"/>
        <result column="APPLICANT_POSITION" property="applicantPostion"/>
        <result column="APPLICANT_COMPANY_ADDRESS" property="applicantCompanyAddress"/>
        <result column="APPLICANT_IDENTITY_NATION" property="applicantIdentityNation"/>
        <result column="APPLICANT_AMERICAN_CITIZEN_FLAG" property="applicantAmericanCitizenFlag"/>
        <result column="APPLICANT_IDENTITY_ADDRESS" property="applicantIdentityAddress"/>
        <result column="APPLICANT_INCOME" property="applicantIncome"/>
        <result column="APPLICANT_SMOKE_FLAG" property="applicantSmokeFlag"/>
        <result column="APPLICANT_DRINK_FLAG" property="applicantDrinkFlag"/>
        <result column="APPLICANT_DANGEROUS_FLAG" property="applicantDangerousFlag"/>
        <result column="APPLICANT_ABROAD_FLAG" property="applicantAbroadFlag"/>
        <result column="APPLICANT_EDUCATION" property="applicantEducation"/>
        <result column="INSURANT_EDUCATION" property="insurantEducation"/>
        <result column="INSURANT_DANGEROUS_FLAG" property="insurantDangerousFlag"/>
        <result column="INSURANT_ABROAD_FLAG" property="insurantAbroadFlag"/>
        <result column="APPLICANT_COMPANY_NAME" property="applicantCompanyName"/>
        <result column="APPLICANT_CURRENT_ASSETS" property="applicantCurrentAssets"/>
        <result column="INSURANT_CURRENT_ASSETS" property="insurantCurrentAssets"/>
        <result column="APPLICANT_AMOUNT_PER_MONTH" property="applicantAmountPerMonth"/>
        <result column="APPLICANT_LIABILITIES" property="applicantLiabilities"/> 
        <result column="INSURANT_COMPANY_NAME" property="insurantCompanyName"/>
        <result column="INSURANT_HEIGHT" property="insurantHeight"/>
        <result column="INSURANT_WEIGHT" property="insurantWeight"/>
        <result column="APPLICANT_WEIGHT" property="applicantWeight"/>
        <result column="APPLICANT_HEIGHT" property="applicantHeight"/>
        <result column="APPLICANT_INDUSTRY" property="applicantIndustry"/>
        <result column="INSURANT_INDUSTRY" property="insurantIndustry"/>
        <result column="INSURANT_SMOKE_FLAG" property="insurantSmokeFlag"/>
        <result column="INSURANT_DRINK_FLAG" property="insurantDrinkFlag"/>
        <result column="INSURANT_CHINESE_NAME" property="insurantChineseName" jdbcType="VARCHAR" />
        <result column="INSURANT_ENGLISH_NAME" property="insurantEnglishName" jdbcType="VARCHAR" />
        <result column="INSURANT_SEX" property="insurantSex" jdbcType="VARCHAR" />
        <result column="INSURANT_BIRTH_DATE" property="insurantbirthDate"/>
        <result column="INSURANT_IDENTITY_NUMBER" property="insurantIdentityNumber"/>
        <result column="INSURANT_NATIONALITY" property="insurantNationality"/>
        <result column="INSURANT_CITY" property="insurantCity"/>
        <result column="INSURANT_MARRIAGE_STATUS" property="insurantMarriageStatus"/>
        <result column="INSURANT_PHONE" property="insurantPhone"/>
        <result column="INSURANT_PHONE_CODE" property="insurantPhoneCode"/>
        <result column="INSURANT_EMAIL" property="insurantEmail"/>
        <result column="INSURANT_POST_ADDRESS" property="insurantPostAddress"/>
        <result column="INSURANT_JOB" property="insurantJob"/>
        <result column="INSURANT_POSITION" property="insurantPostion"/>
        <result column="INSURANT_COMPANY_ADDRESS" property="insurantCompanyAddress"/>
        <result column="INSURANT_IDENTITY_NATION" property="insurantIdentityNation"/>
        <result column="INSURANT_AMERICAN_CITIZEN_FLAG" property="insurantAmericanCitizenFlag"/>
        <result column="INSURANT_IDENTITY_ADDRESS" property="insurantIdentityAddress"/>
        <result column="INSURANT_INCOME" property="insurantIncome"/>
        <result column="APPLICANT_COMPANY_NATION" property="applicantCompanyNation"/>
        <result column="APPLICANT_COMPANY_PROVINCE" property="applicantCompanyProvince"/>
        <result column="APPLICANT_COMPANY_CITY" property="applicantCompanyCity"/>
        <result column="INSURANT_COMPANY_NATION" property="insurantCompanyNation"/>
        <result column="INSURANT_COMPANY_PROVINCE" property="insurantCompanyProvince"/>
        <result column="INSURANT_COMPANY_CITY" property="insurantCompanyCity"/>
        <result column="ORDER_DEAL_USER_ID" property="orderDealUserId" jdbcType="DECIMAL" />
        <result column="CUSTOMER_DEAL_USER_ID" property="customerDealUserId" jdbcType="DECIMAL" />
        <result column="Application_DEAL_USER_ID" property="applicationDealUserId" jdbcType="DECIMAL" />
        <result column="ORDER_DEAL_NAME" property="orderDealName" jdbcType="VARCHAR" />
        <result column="CUSTOMER_DEAL_NAME" property="customerDealName" jdbcType="VARCHAR" />
        <result column="Application_DEAL_NAME" property="applicationDealName" jdbcType="VARCHAR" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="APPLICANT_FIXED_ASSETS" property="applicantFixedAssets" jdbcType="VARCHAR" />
        <result column="MID_CLASS" property="midClass" jdbcType="VARCHAR" />
        <result column="BACK_FLAG" property="backFlag" jdbcType="VARCHAR" />
        <result column="BACK_DATE" property="backDate" jdbcType="TIMESTAMP" />
        <result column="PRD_SUPPLIER_FILE_ID" property="prdSupplierFileId" jdbcType="DECIMAL" />
        <result column="PRD_SUPPLIER_FILE_PATH" property="prdSupplierFilePath" jdbcType="VARCHAR" />
        <result column="AGE_CALCULATE_STANDARD" property="ageCalculateStandard" jdbcType="VARCHAR" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="ORDER_CREATED_BY" property="orderCreatedBy" jdbcType="DECIMAL" />
        <result column="RENEWAL_FLAG" property="renewalFlag" jdbcType="VARCHAR" />
        <result column="NOTICE_ITEM" property="noticeItem" jdbcType="VARCHAR" />
        <result column="APPLICANT_IDENTITY_PROVINCE" property="applicantIdentityProvince" jdbcType="VARCHAR" />
        <result column="APPLICANT_IDENTITY_CITY" property="applicantIdentityCity" jdbcType="VARCHAR" />
        <result column="INSURANT_IDENTITY_PROVINCE" property="insurantIdentityProvince" jdbcType="VARCHAR" />
        <result column="INSURANT_IDENTITY_CITY" property="insurantIdentityCity" jdbcType="VARCHAR" />
        <result column="APPLICANT_POST_NATION" property="applicantPostNation" jdbcType="VARCHAR" />
        <result column="APPLICANT_POST_PROVINCE" property="applicantPostProvince" jdbcType="VARCHAR" />
        <result column="APPLICANT_POST_CITY" property="applicantPostCity" jdbcType="VARCHAR" />
        <result column="INSURANT_POST_NATION" property="insurantPostNation" jdbcType="VARCHAR" />
        <result column="INSURANT_POST_PROVINCE" property="insurantPostProvince" jdbcType="VARCHAR" />
        <result column="INSURANT_POST_CITY" property="insurantPostCity" jdbcType="VARCHAR" />
        <result column="COMMON_NAME" property="commonName" jdbcType="VARCHAR" />
        <result column="COMMON_PHONE" property="commonPhone" jdbcType="VARCHAR" />
        <result column="COMMON_ADDR" property="commonAddr" jdbcType="VARCHAR" />
        <result column="COMMON_REMARK" property="commonRemark" jdbcType="VARCHAR" />
        <result column="COMMON_PHONE_CODE" property="commonPhoneCode" jdbcType="VARCHAR" />
        <result column="COUNT_PENDING" property="countPending" jdbcType="DECIMAL" />
        <result column="RENEWAL_YEAR" property="renewalYear" jdbcType="DECIMAL" />
        <result column="CHANNEL_PHONE_CODE" property="channelPhoneCode" jdbcType="VARCHAR" />
        <result column="CHANNEL_PHONE" property="channelPhone" jdbcType="VARCHAR" />
        <result column="TURN_COMPANY" property="turnCompany" jdbcType="VARCHAR" />
        <result column="EXPRESS_NUMBER" property="expressNumber" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="UserResultMap" type="com.hand.hap.account.dto.User" extends="com.hand.hap.mapper.StdMapper.STD">
        <id column="USER_ID" property="userId" jdbcType="DECIMAL" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="USER_TYPE" property="userType" jdbcType="VARCHAR" />
        <result column="EMPLOYEE_ID" property="employeeId" jdbcType="DECIMAL" />
        <result column="EMPLOYEE_CODE" property="employeeCode" jdbcType="VARCHAR" />
        <result column="EMPLOYEE_NAME" property="employeeName" jdbcType="VARCHAR" />
        
        <result column="SAVE_STATUS" property="saveStatus" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="ClbUserResultMap" type="clb.core.system.dto.ClbUser" extends="com.hand.hap.mapper.StdMapper.STD">
        <id column="USER_ID" property="userId" jdbcType="DECIMAL" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="USER_TYPE" property="userType" jdbcType="VARCHAR" />
        <result column="EMPLOYEE_ID" property="employeeId" jdbcType="DECIMAL" />
        <result column="EMPLOYEE_NAME" property="employeeName" jdbcType="VARCHAR" />
        <result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="FieldResultMap" type="clb.core.order.dto.SysOrderCfgField">
        <result column="LINE_ID" property="lineId" jdbcType="DECIMAL" />
        <result column="CFG_ID" property="cfgId" jdbcType="DECIMAL" />
        <result column="FIELD_CODE" property="fieldCode" jdbcType="VARCHAR" />
        <result column="SEQ_NUM" property="seqNum" jdbcType="DECIMAL" />
        <result column="PROGRAM_ID" property="programId" jdbcType="DECIMAL" />
        <result column="REQUEST_ID" property="requestId" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="OperaResultMap" type="clb.core.order.dto.SysOrderCfgOperation">
        <result column="LINE_ID" property="lineId" jdbcType="DECIMAL" />
        <result column="CFG_ID" property="cfgId" jdbcType="DECIMAL" />
        <result column="OPERATION_CODE" property="operationCode" jdbcType="VARCHAR" />
        <result column="PROGRAM_ID" property="programId" jdbcType="DECIMAL" />
        <result column="REQUEST_ID" property="requestId" jdbcType="DECIMAL" />
    </resultMap>

    <!--<resultMap id="SupplierResultMap" type="clb.core.commission.dto.CmnSupplierRelation">-->
        <!--<result column="RELATION_ID" property="relationId" jdbcType="DECIMAL" />-->
        <!--<result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />-->
        <!--<result column="PARENT_SUPPLIER_ID" property="parentSupplierId" jdbcType="DECIMAL" />-->
        <!--<result column="ITEM_ID" property="itemId" jdbcType="DECIMAL" />-->
    <!--</resultMap>-->

    <resultMap id="RouteResultMap" type="clb.core.commission.dto.CmnChannelCommission">
        <result column="LINE_ID" property="lineId" jdbcType="DECIMAL" />
        <result column="DEAL_PATH" property="dealPath" jdbcType="VARCHAR" />
        <result column="OWN_SUPPLIER_ID" property="ownSupplierId" jdbcType="DECIMAL" />
        <result column="OWN_SUPPLIER_NAME" property="ownSupplierName" jdbcType="VARCHAR" />
        <result column="RESERVE_SUPPLIER_ID" property="reserveSupplierId" jdbcType="DECIMAL" />
        <result column="RESERVE_SUPPLIER_NAME" property="reserveSupplierName" jdbcType="VARCHAR" />
        <result column="MIDDLE_SUPPLIER_NAME" property="middleSupplierName" jdbcType="VARCHAR" />
        <result column="SIGN_SUPPLIER_ID" property="signSupplierId" jdbcType="DECIMAL" />
        <result column="SIGN_SUPPLIER_NAME" property="signSupplierName" jdbcType="VARCHAR" />
        <result column="INSURANCE_SUPPLIER_NAME" property="insuranceSupplierName" jdbcType="VARCHAR" />
        <result column="CHANNEL_CONTRACT_ID" property="channelContractId" jdbcType="DECIMAL" />
        <result column="ROLE_USER_ID" property="roleUserId" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="RelationResultMap" type="clb.core.order.dto.OrdTradeRoute">
        <result column="COMPANY_ID" property="companyId" jdbcType="DECIMAL" />
        <result column="COMPANY_NAME" property="companyName" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE1" property="attribute1" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE2" property="attribute2" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE3" property="attribute3" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE4" property="attribute4" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE5" property="attribute5" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE6" property="attribute6" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE7" property="attribute7" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE8" property="attribute8" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE9" property="attribute9" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE10" property="attribute10" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE11" property="attribute11" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE12" property="attribute12" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE13" property="attribute13" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE14" property="attribute14" jdbcType="VARCHAR" />
        <result column="ATTRIBUTE15" property="attribute15" jdbcType="VARCHAR" />
        <result column="CHANNEL_COUNT" property="channelCount" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="CodeResultMap" type="clb.core.system.dto.ClbCodeValue" extends="com.hand.hap.mapper.StdMapper.STD">
        <id column="CODE_VALUE_ID" property="codeValueId" jdbcType="DECIMAL"/>
        <result column="CODE_ID" property="codeId" jdbcType="DECIMAL"/>
        <result column="VALUE" property="value" jdbcType="VARCHAR"/>
        <result column="MEANING" property="meaning" jdbcType="VARCHAR"/>
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR"/>
        <result column="ENABLED_FLAG" property="enabledFlag" jdbcType="VARCHAR" />
        <result column="PARENT_VALUE" property="parentValue" jdbcType="VARCHAR"/>
        <result column="ORDER_SEQ" property="orderSeq" jdbcType="DECIMAL"/>
        <result column="FUNCTION_CODE" property="functionCode" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="SettleResultMap" type="clb.core.supplier.dto.SpeSupplierSettle">
        <result column="SETTLE_ID" property="settleId" jdbcType="DECIMAL" />
        <result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />
        <result column="COST_NAME" property="costName" jdbcType="VARCHAR" />
        <result column="SETTLE_TYPE_CODE" property="settleTypeCode" jdbcType="VARCHAR" />
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
        <result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR" />
        <result column="PROGRAM_ID" property="programId" jdbcType="DECIMAL" />
        <result column="REQUEST_ID" property="requestId" jdbcType="DECIMAL" />
    </resultMap>


    <select id="queryOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT * FROM
        (SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.ISSUE_DATE,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        CASE
          WHEN DATEDIFF(IFNULL(foo.SUBMIT_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now()) &lt; 0
          THEN ABS(DATEDIFF(IFNULL(foo.SUBMIT_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now())) + 9999
        ELSE DATEDIFF(IFNULL(foo.SUBMIT_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now()) END SUBMIT_DAY,
        foo.RESERVE_DATE,
        CASE
          WHEN DATEDIFF(IFNULL(foo.RESERVE_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now()) &lt; 0
          THEN ABS(DATEDIFF(IFNULL(foo.RESERVE_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now())) + 9999
        ELSE DATEDIFF(IFNULL(foo.RESERVE_DATE, DATE_ADD(now(), INTERVAL 100 YEAR)), now()) END RESERVE_DAY,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        afoc.CHINESE_NAME APPLICANT,
        afoc.ENGLISH_NAME APPLICANT_ENGLISH,
        ifoc.CHINESE_NAME INSURANT,
        ifoc.ENGLISH_NAME INSURANT_ENGLISH,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        ofss.NAME OWN_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', afoc.CHINESE_NAME,'-',ifoc.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.item_name,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        #{functionCode , jdbcType=VARCHAR} FUNCTION_CODE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        foo.ORDER_DEAL_USER_ID,
        odrpt.key_name ORDER_DEAL_NAME,
        foo.CUSTOMER_DEAL_USER_ID,
        cdrpt.key_name CUSTOMER_DEAL_NAME,
        foo.Application_DEAL_USER_ID,
        adrpt.key_name Application_DEAL_NAME,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.RENEWAL_FLAG,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING,
        foo.SURRENDER_FLAG,
        foo.RENEWAL_YEAR,
        foo.TURN_COMPANY,
        foo.EXPRESS_NUMBER
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ord_customer afoc
        ON afoc.ORDER_ID = foo.ORDER_ID
        AND afoc.CUSTOMER_TYPE = 'APPLICANT'
        LEFT JOIN fms_ord_customer ifoc
        ON ifoc.ORDER_ID = foo.ORDER_ID
        AND ifoc.CUSTOMER_TYPE = 'INSURANT'
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier ofss
        ON ofss.SUPPLIER_ID = foo.OWN_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_user odsu
        ON (foo.order_deal_user_id = odsu.user_id)
        LEFT JOIN (
        SELECT EMPLOYEE_ID key_id, NAME key_name, 'OPERATOR' key_type ,PHONE_CODE FROM hr_employee
        UNION
        SELECT CHANNEL_ID, CHANNEL_NAME, 'CHANNEL',PHONE_CODE FROM fms_cnl_channel
        UNION
        SELECT SUPPLIER_ID, NAME, 'SUPPLIER','' PHONE_CODE FROM fms_spe_supplier
        UNION
        SELECT CUSTOMER_ID, CHINESE_NAME, 'CUSTOMER','' PHONE_CODE FROM fms_ctm_customer ) odrpt
        ON (odsu.RELATED_PARTY_ID = odrpt.key_id AND odsu.USER_TYPE = odrpt.key_type)

        LEFT JOIN sys_user cdsu
        ON (foo.CUSTOMER_DEAL_USER_ID = cdsu.user_id)
        LEFT JOIN (
        SELECT EMPLOYEE_ID key_id, NAME key_name, 'OPERATOR' key_type ,PHONE_CODE FROM hr_employee
        UNION
        SELECT CHANNEL_ID, CHANNEL_NAME, 'CHANNEL',PHONE_CODE FROM fms_cnl_channel
        UNION
        SELECT SUPPLIER_ID, NAME, 'SUPPLIER','' PHONE_CODE FROM fms_spe_supplier
        UNION
        SELECT CUSTOMER_ID, CHINESE_NAME, 'CUSTOMER','' PHONE_CODE FROM fms_ctm_customer ) cdrpt
        ON (cdsu.RELATED_PARTY_ID = cdrpt.key_id AND cdsu.USER_TYPE = cdrpt.key_type)

        LEFT JOIN sys_user adsu
        ON (foo.Application_DEAL_USER_ID = adsu.user_id)
        LEFT JOIN (
        SELECT EMPLOYEE_ID key_id, NAME key_name, 'OPERATOR' key_type ,PHONE_CODE FROM hr_employee
        UNION
        SELECT CHANNEL_ID, CHANNEL_NAME, 'CHANNEL',PHONE_CODE FROM fms_cnl_channel
        UNION
        SELECT SUPPLIER_ID, NAME, 'SUPPLIER','' PHONE_CODE FROM fms_spe_supplier
        UNION
        SELECT CUSTOMER_ID, CHINESE_NAME, 'CUSTOMER','' PHONE_CODE FROM fms_ctm_customer ) adrpt
        ON (adsu.RELATED_PARTY_ID = adrpt.key_id AND adsu.USER_TYPE = adrpt.key_type)

        LEFT JOIN sys_code_b sc
        ON SC.code = 'ORD.ORDER_STATUS'
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value= (CASE
                        WHEN (SELECT count(1)
                        FROM fms_ord_pending fop
                        WHERE fop.ORDER_ID = foo.ORDER_ID
                        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
                        AND foo.STATUS = 'APPROVING') > 0 THEN
                        'PENDING'
                        WHEN
                        (SELECT count(1)
                        FROM fms_ord_after foa
                        LEFT JOIN fms_ord_template fot
                        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
                        WHERE foa.ORDER_ID = foo.ORDER_ID
                        AND foo.SURRENDER_FLAG = 'Y'
                        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
                        'SURRENDERING'
                        ELSE
                        foo.STATUS
                        END)
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID) foop
        WHERE 1=1
        AND foop.ORDER_TYPE = 'INSURANCE'
        <if test = "orderId != null"> AND foop.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foop.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foop.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foop.ORDER_ID
            AND foop.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foop.STATUS
            END) = #{status , jdbcType=VARCHAR} OR foop.STATUS = #{status , jdbcType=VARCHAR})</if>
        <if test = "sublineId != null"> AND foop.SUBLINE_ID = #{sublineId , jdbcType=DECIMAL} </if>
        <if test = "channelName != null"> AND foop.CHANNEL_NAME LIKE concat('%',#{channelName , jdbcType=VARCHAR},'%') </if>
        <if test = "applicant != null"> AND (foop.APPLICANT LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') OR foop.APPLICANT_ENGLISH LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%')) </if>
        <if test = "insurant != null"> AND (foop.INSURANT LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') OR foop.INSURANT_ENGLISH LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%')) </if>
        <if test = "policyNumber != null"> AND foop.POLICY_NUMBER LIKE concat('%',#{policyNumber , jdbcType=VARCHAR},'%') </if>
        <if test = "person != null">
            AND (foop.CHANNEL_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foop.APPLICANT LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foop.INSURANT LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "number != null">
            AND (foop.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foop.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foop.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foop.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foop.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foop.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foop.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foop.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "productSupplierName != null"> AND foop.PRODUCT_SUPPLIER_NAME LIKE concat('%',#{productSupplierName , jdbcType=VARCHAR},'%') </if>
        <if test = "itemName != null"> AND foop.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%') </if>
		<if test="expectCoolDateColumn != null and expectCoolDateColumn != ''">
        	and foop.EXPECT_COOL_DATE IS NULL
        </if>
        ORDER BY
        <if test="reserveDateSort != null">
             FOOP.RESERVE_DATE  ${reserveDateSort},
        </if>
        <if test="reserveArrivalDateSort != null">
            FOOP.submit_date ${reserveArrivalDateSort},
        </if>
        <if test="dateType != null and dateType == 'SUBMIT'">
                foop.SUBMIT_DAY ASC,
        </if>
        foop.RESERVE_DAY ASC
    </select>

    <select id="queryWsOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.MIGRATE_COUNTRY,
        foo.BUDGET,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CASE foo.ORDER_TYPE
        WHEN 'VALUEADD' THEN
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        ELSE
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        END ITEM,

        CASE foo.ORDER_TYPE
        WHEN 'INSURANCE' THEN
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        ELSE
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        END NOTICE_ITEM,

        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        foca.SEX APPLICANT_SEX,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.ITEM_NAME,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        foo.RELATED_ORDER_ID,
        rfoo.ORDER_NUMBER RELATED_ORDER_NUMBER,
        foo.CUSTOMER_PRICE,
        foo.PRICE,
        foo.PEOPLE_COUNT,
        foo.PAY_AMOUNT,
        foo.VEHICLE_TYPE,
        foo.USER_HOUR,
        foo.DEPARTURE,
        foo.DESTINATION,
        foo.LODGER_NAME,
        foo.LODGER_PINYIN,
        foo.CUSTOMER_PHONE_CODE,
        foo.CUSTOMER_PHONE,
        foo.PRICE_INTERVAL,
        foo.CHECKIN_DATE,
        foo.CHECKOUT_DATE,
        foo.ROOM_COUNT,
        foo.ROOM_TYPE,
        foo.HOTEL_NAME,
        foo.VACCINE_CUSTOMER_NAME,
        foo.VACCINE_CUSTOMER_AGE,
        foo.VACCINE_CUSTOMER_SEX,
        foo.VACCINE_CUSTOMER_PASS,
        foo.VACCINE_CUSTOMER_TIMES,
        foo.KEEP_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.VALUEADD_TYPE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        pfss.FILE_ID PRD_SUPPLIER_FILE_ID,
        psffsf.FILE_PATH PRD_SUPPLIER_FILE_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.CREATED_BY ORDER_CREATED_BY,
        foo.RENEWAL_FLAG,
        foo.COMMON_NAME,
        foo.COMMON_PHONE,
        foo.COMMON_ADDR,
        foo.COMMON_REMARK,
        foo.COMMON_PHONE_CODE,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING,
        fcc.PHONE_CODE CHANNEL_PHONE_CODE,
        fcc.CONTACT_PHONE CHANNEL_PHONE,
        foo.EXPRESS_NUMBER
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN sys_file psffsf
        ON psffsf.FILE_ID = pfss.FILE_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_code_b sc
        ON SC.code = case foo.order_type
        WHEN 'INSURANCE' THEN
        'ORD.ORDER_STATUS'
        WHEN 'BOND' THEN
        'ORD.BOND_STATUS'
        WHEN 'IMMIGRANT' THEN
        'ORD.IMMIGRANT_STATUS'
        WHEN 'VALUEADD' THEN
        'ORD.VALUEADD_STATUS'
        END
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=(CASE
                        WHEN (SELECT count(1)
                        FROM fms_ord_pending fop
                        WHERE fop.ORDER_ID = foo.ORDER_ID
                        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
                        AND foo.STATUS = 'APPROVING') > 0 THEN
                        'PENDING'
                        WHEN
                        (SELECT count(1)
                        FROM fms_ord_after foa
                        LEFT JOIN fms_ord_template fot
                        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
                        WHERE foa.ORDER_ID = foo.ORDER_ID
                        AND foo.SURRENDER_FLAG = 'Y'
                        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
                        'SURRENDERING'
                        ELSE
                        foo.STATUS
                        END)

        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID
        LEFT JOIN FMS_ORD_ORDER rfoo
        ON rfoo.order_id = foo.related_order_id
        LEFT JOIN fms_ord_customer foca
        ON (foca.ORDER_ID = foo.ORDER_ID and foca.CUSTOMER_TYPE = 'APPLICANT')
        LEFT JOIN fms_ord_customer foci
        ON (foci.ORDER_ID = foo.ORDER_ID and foci.CUSTOMER_TYPE = 'INSURANT')
        WHERE 1=1
        <if test = "orderId != null"> AND foo.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foo.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foo.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foo.ORDER_ID
            AND foo.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foo.STATUS
            END) = #{status , jdbcType=VARCHAR} OR foo.STATUS = #{status , jdbcType=VARCHAR})
          </if>
        <if test = "channelId != null"> AND foo.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "introducer != null"> AND foo.INTRODUCER = #{introducer} </if>
        <if test = "orderNumber != null"> AND foo.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foo.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "valueaddType != null"> AND foo.VALUEADD_TYPE = #{valueaddType , jdbcType=VARCHAR} </if>
        <if test = "applicant != null"> AND actm.CHINESE_NAME LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND ictm.CHINESE_NAME LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>

        <if test = "person != null">
            AND (actm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR ictm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foca.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%')
            OR foci.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%') )
        </if>

        <if test = "number != null">
            AND (foo.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foo.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "item != null">
            AND CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) LIKE concat('%',concat(#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "stockItem != null">
            AND (fpi.ATTRIBUTE50 LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%') OR fpi.ITEM_NAME LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "itemName != null">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "customerId != null ">
            AND (foo.APPLICANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL} OR
                 foo.INSURANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL})
        </if>
        <!-- 增值服务添加查询条件 -->
        <if test = "orderNumber != null ">
            AND foo.ORDER_NUMBER LIKE concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
        </if>
        <if test = "itemName != null ">
          	 AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>
        <if test = "relatedOrderNumber != null ">
            AND rfoo.ORDER_NUMBER LIKE concat('%',#{relatedOrderNumber , jdbcType=VARCHAR},'%')
        </if>
        <if test = "channelName != null ">
            AND fcc.CHANNEL_NAME LIKE concat('%',#{channelName,jdbcType=VARCHAR},'%')
        </if>
        <if test = "applicant != null ">
           AND actm.CHINESE_NAME LIKE concat('%',#{applicant,jdbcType=VARCHAR},'%')
        </if>

        <choose>
            <when test="orderBy != null and orderBy != ''">
                <bind name="_colName" value="@com.hand.hap.mybatis.util.OGNL@unCamel(orderBy)"/>
                order by ${_colName}
            </when>
            <otherwise>
                ORDER BY
                CASE
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'UNSUBMITTED' THEN
                2
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'PENDING' THEN
                1
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'WAIT_PAY' THEN
                1
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                ELSE
                3
                END,
                foo.SUBMIT_DATE desc
            </otherwise>
        </choose>

    </select>

    <select id="queryWsPersonalOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.MIGRATE_COUNTRY,
        foo.BUDGET,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CASE foo.ORDER_TYPE
        WHEN 'VALUEADD' THEN
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        ELSE
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        END ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        foca.SEX APPLICANT_SEX,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.ITEM_NAME,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        foo.RELATED_ORDER_ID,
        rfoo.ORDER_NUMBER RELATED_ORDER_NUMBER,
        foo.CUSTOMER_PRICE,
        foo.PRICE,
        foo.PEOPLE_COUNT,
        foo.PAY_AMOUNT,
        foo.VEHICLE_TYPE,
        foo.USER_HOUR,
        foo.DEPARTURE,
        foo.DESTINATION,
        foo.LODGER_NAME,
        foo.LODGER_PINYIN,
        foo.CUSTOMER_PHONE_CODE,
        foo.CUSTOMER_PHONE,
        foo.PRICE_INTERVAL,
        foo.CHECKIN_DATE,
        foo.CHECKOUT_DATE,
        foo.ROOM_COUNT,
        foo.ROOM_TYPE,
        foo.HOTEL_NAME,
        foo.VACCINE_CUSTOMER_NAME,
        foo.VACCINE_CUSTOMER_AGE,
        foo.VACCINE_CUSTOMER_SEX,
        foo.VACCINE_CUSTOMER_PASS,
        foo.VACCINE_CUSTOMER_TIMES,
        foo.KEEP_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.VALUEADD_TYPE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.COMMON_NAME,
        foo.COMMON_PHONE,
        foo.COMMON_ADDR,
        foo.COMMON_REMARK,
        foo.COMMON_PHONE_CODE,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_code_b sc
        ON SC.code = case foo.order_type
        WHEN 'INSURANCE' THEN
        'ORD.ORDER_STATUS'
        WHEN 'BOND' THEN
        'ORD.BOND_STATUS'
        WHEN 'IMMIGRANT' THEN
        'ORD.IMMIGRANT_STATUS'
        WHEN 'VALUEADD' THEN
        'ORD.VALUEADD_STATUS'
        END
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=(CASE
                        WHEN (SELECT count(1)
                        FROM fms_ord_pending fop
                        WHERE fop.ORDER_ID = foo.ORDER_ID
                        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
                        AND foo.STATUS = 'APPROVING') > 0 THEN
                        'PENDING'
                        WHEN
                        (SELECT count(1)
                        FROM fms_ord_after foa
                        LEFT JOIN fms_ord_template fot
                        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
                        WHERE foa.ORDER_ID = foo.ORDER_ID
                        AND foo.SURRENDER_FLAG = 'Y'
                        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
                        'SURRENDERING'
                        ELSE
                        foo.STATUS
                        END)
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID
        LEFT JOIN FMS_ORD_ORDER rfoo
        ON rfoo.order_id = foo.related_order_id
        LEFT JOIN fms_ord_customer foca
        ON (foca.ORDER_ID = foo.ORDER_ID and foca.CUSTOMER_TYPE = 'APPLICANT')
        LEFT JOIN fms_ord_customer foci
        ON (foci.ORDER_ID = foo.ORDER_ID and foci.CUSTOMER_TYPE = 'INSURANT')
        WHERE 1=1
        <if test = "orderId != null"> AND foo.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foo.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foo.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foo.ORDER_ID
            AND foo.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foo.STATUS
            END) = #{status , jdbcType=VARCHAR} 
            <if test="status == 'DATA_APPROVING'">
           	 	OR foo.STATUS IN ("DATA_APPROVING","PRE_APPROVED","PRE_APPROVING"))
            </if>
            <if test="status != 'DATA_APPROVING'">
            	OR foo.STATUS = #{status , jdbcType=VARCHAR})
            </if>
        </if>
        <if test = "channelId != null"> AND foo.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "introducer != null"> AND foo.INTRODUCER = #{introducer} </if>
        <if test = "orderNumber != null"> AND foo.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foo.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "valueaddType != null"> AND foo.VALUEADD_TYPE = #{valueaddType , jdbcType=VARCHAR} </if>
        <if test = "applicant != null"> AND actm.CHINESE_NAME LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND ictm.CHINESE_NAME LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>

        <if test = "person != null">
            AND (actm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR ictm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foca.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%')
            OR foci.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%') )
        </if>

        <if test = "number != null">
            AND (foo.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foo.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "item != null">
            AND CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) LIKE concat('%',concat(#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "stockItem != null">
            AND (fpi.ATTRIBUTE50 LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%') OR fpi.ITEM_NAME LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "itemName != null">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "customerId != null ">
            AND (foo.APPLICANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL} OR
            foo.INSURANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL})
        </if>
        <!-- 增值服务添加查询条件 -->
        <if test = "orderNumber != null ">
            AND foo.ORDER_NUMBER LIKE concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
        </if>
        <if test = "itemName != null ">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>
        <if test = "relatedOrderNumber != null ">
            AND rfoo.ORDER_NUMBER LIKE concat('%',#{relatedOrderNumber , jdbcType=VARCHAR},'%')
        </if>
        <if test = "channelName != null ">
            AND fcc.CHANNEL_NAME LIKE concat('%',#{channelName,jdbcType=VARCHAR},'%')
        </if>
        <if test = "applicant != null ">
            AND actm.CHINESE_NAME LIKE concat('%',#{applicant,jdbcType=VARCHAR},'%')
        </if>

        <choose>
            <when test="orderBy != null and orderBy != ''">
                <bind name="_colName" value="@com.hand.hap.mybatis.util.OGNL@unCamel(orderBy)"/>
                order by ${_colName}
            </when>
            <otherwise>
                ORDER BY
                CASE
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'UNSUBMITTED' THEN
                2
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'PENDING' THEN
                1
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                ELSE
                3
                END,
                foo.SUBMIT_DATE desc
            </otherwise>
        </choose>
    </select>

    <select id="queryPersonalTotal" parameterType="clb.core.order.dto.OrdOrder" resultType="java.lang.Long" >
        SELECT COUNT(*)
                FROM
                fms_ord_order AS fcc
        LEFT JOIN fms_payment_order fmo on Fcc.ORDER_ID = fmo.SOURCE_ID
        WHERE 1=1
        <if test = "orderType != null"> AND fcc.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "status != null">
            AND (fcc.status = #{status , jdbcType=VARCHAR}
          <if test = "status == 'WAIT_PAY'">
              <if test = "sourceType == 'ORDER'">
                  AND (TIMESTAMPDIFF(MINUTE,NOW(),fmo.CREATION_DATE)) &lt; fmo.PAY_LIMIT_TIME
              </if>
          </if>
        </if>
        <if test = "status1 != null"> OR fcc.status = #{status1 , jdbcType=VARCHAR} </if>
        <if test = "status2 != null"> OR fcc.status = #{status2 , jdbcType=VARCHAR} </if>
        <if test = "status3 != null"> OR fcc.status = #{status3 , jdbcType=VARCHAR} </if>
        <if test = "status4 != null"> OR fcc.status = #{status4 , jdbcType=VARCHAR} </if>)

    </select>


    <select id="queryWsTeamOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CASE foo.ORDER_TYPE
        WHEN 'VALUEADD' THEN
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        ELSE
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        END ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        fcc.CHANNEL_ID TRANSFORM_CHANNEL_ID,
        actm.CHINESE_NAME APPLICANT,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.ITEM_NAME,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        fotr.COMPANY_ID PARENT_CHANNEL_ID,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        foo.RELATED_ORDER_ID,
        rfoo.ORDER_NUMBER RELATED_ORDER_NUMBER,
        foo.CUSTOMER_PRICE,
        foo.PRICE,
        foo.PEOPLE_COUNT,
        foo.PAY_AMOUNT,
        foo.VEHICLE_TYPE,
        foo.USER_HOUR,
        foo.DEPARTURE,
        foo.DESTINATION,
        foo.LODGER_NAME,
        foo.LODGER_PINYIN,
        foo.CUSTOMER_PHONE_CODE,
        foo.CUSTOMER_PHONE,
        foo.PRICE_INTERVAL,
        foo.CHECKIN_DATE,
        foo.CHECKOUT_DATE,
        foo.ROOM_COUNT,
        foo.ROOM_TYPE,
        foo.HOTEL_NAME,
        foo.VACCINE_CUSTOMER_NAME,
        foo.VACCINE_CUSTOMER_AGE,
        foo.VACCINE_CUSTOMER_SEX,
        foo.VACCINE_CUSTOMER_PASS,
        foo.VACCINE_CUSTOMER_TIMES,
        foo.KEEP_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.VALUEADD_TYPE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.RENEWAL_FLAG,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_code_b sc
        ON SC.code = case foo.order_type
                     WHEN 'INSURANCE' THEN
                        'ORD.ORDER_STATUS'
                     WHEN 'BOND' THEN
                        'ORD.BOND_STATUS'
                     WHEN 'IMMIGRANT' THEN
                        'ORD.IMMIGRANT_STATUS'
                     WHEN 'VALUEADD' THEN
                        'ORD.VALUEADD_STATUS'
                     END
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=(CASE
                        WHEN (SELECT count(1)
                        FROM fms_ord_pending fop
                        WHERE fop.ORDER_ID = foo.ORDER_ID
                        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
                        AND foo.STATUS = 'APPROVING') > 0 THEN
                        'PENDING'
                        WHEN
                        (SELECT count(1)
                        FROM fms_ord_after foa
                        LEFT JOIN fms_ord_template fot
                        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
                        WHERE foa.ORDER_ID = foo.ORDER_ID
                        AND foo.SURRENDER_FLAG = 'Y'
                        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
                        'SURRENDERING'
                        ELSE
                        foo.STATUS
                        END)
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID
        JOIN fms_ord_trade_route fotr
        ON fotr.order_id = foo.order_id AND fotr.COMPANY_TYPE = 'CHANNEL'
        JOIN fms_ord_trade_route fotr1
        ON fotr1.order_id = foo.order_id AND fotr1.COMPANY_TYPE = 'CHANNEL'
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = fotr1.COMPANY_ID
        LEFT JOIN FMS_ORD_ORDER rfoo
        ON rfoo.order_id = foo.related_order_id
        LEFT JOIN fms_ord_customer foca
        ON (foca.ORDER_ID = foo.ORDER_ID and foca.CUSTOMER_TYPE = 'APPLICANT')
        LEFT JOIN fms_ord_customer foci
        ON (foci.ORDER_ID = foo.ORDER_ID and foci.CUSTOMER_TYPE = 'INSURANT')
        WHERE 1=1
        AND fotr.SEQ_NUM -1 = fotr1.SEQ_NUM
        <if test = "orderId != null"> AND foo.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foo.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foo.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foo.ORDER_ID
            AND foo.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foo.STATUS
            END) = #{status , jdbcType=VARCHAR}  
        	<if test="status == 'DATA_APPROVING'">
           	 	OR foo.STATUS IN ("DATA_APPROVING","PRE_APPROVED","PRE_APPROVING"))
            </if>
            <if test="status != 'DATA_APPROVING'">
            	OR foo.STATUS = #{status , jdbcType=VARCHAR})
            </if>    
        </if>
        <if test = "channelId != null"> AND fcc.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "parentChannelId != null"> AND fotr.COMPANY_ID = #{parentChannelId , jdbcType=DECIMAL} </if>
        <if test = "orderNumber != null"> AND foo.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foo.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "valueaddType != null"> AND foo.VALUEADD_TYPE = #{valueaddType , jdbcType=VARCHAR} </if>
        <if test = "applicant != null"> AND actm.CHINESE_NAME LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND ictm.CHINESE_NAME LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>

        <if test = "person != null">
            AND (actm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR ictm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foca.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%')
            OR foci.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "number != null">
            AND (foo.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foo.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "item != null">
            AND CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) LIKE concat('%',concat(#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "stockItem != null">
            AND (fpi.ATTRIBUTE50 LIKE concat('%',#{item , jdbcType=VARCHAR},'%') OR fpi.ITEM_NAME LIKE concat('%',#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <choose>
            <when test="orderBy != null and orderBy != ''">
                <bind name="_colName" value="@com.hand.hap.mybatis.util.OGNL@unCamel(orderBy)"/>
                order by ${_colName}
            </when>
            <otherwise>
                ORDER BY
                CASE
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'UNSUBMITTED' THEN
                2
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'PENDING' THEN
                1
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                ELSE
                3
                END,
                foo.SUBMIT_DATE desc
            </otherwise>
        </choose>

    </select>

    <!--转介绍订单查询-->
    <select id="queryWsReferralOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.MIGRATE_COUNTRY,
        foo.BUDGET,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CASE foo.ORDER_TYPE
        WHEN 'VALUEADD' THEN
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        ELSE
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        END ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        foca.SEX APPLICANT_SEX,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.ITEM_NAME,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        foo.RELATED_ORDER_ID,
        rfoo.ORDER_NUMBER RELATED_ORDER_NUMBER,
        foo.CUSTOMER_PRICE,
        foo.PRICE,
        foo.PEOPLE_COUNT,
        foo.PAY_AMOUNT,
        foo.VEHICLE_TYPE,
        foo.USER_HOUR,
        foo.DEPARTURE,
        foo.DESTINATION,
        foo.LODGER_NAME,
        foo.LODGER_PINYIN,
        foo.CUSTOMER_PHONE_CODE,
        foo.CUSTOMER_PHONE,
        foo.PRICE_INTERVAL,
        foo.CHECKIN_DATE,
        foo.CHECKOUT_DATE,
        foo.ROOM_COUNT,
        foo.ROOM_TYPE,
        foo.HOTEL_NAME,
        foo.VACCINE_CUSTOMER_NAME,
        foo.VACCINE_CUSTOMER_AGE,
        foo.VACCINE_CUSTOMER_SEX,
        foo.VACCINE_CUSTOMER_PASS,
        foo.VACCINE_CUSTOMER_TIMES,
        foo.KEEP_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.VALUEADD_TYPE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.RENEWAL_FLAG,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_code_b sc
        ON SC.code = case foo.order_type
        WHEN 'INSURANCE' THEN
        'ORD.ORDER_STATUS'
        WHEN 'BOND' THEN
        'ORD.BOND_STATUS'
        WHEN 'IMMIGRANT' THEN
        'ORD.IMMIGRANT_STATUS'
        WHEN 'VALUEADD' THEN
        'ORD.VALUEADD_STATUS'
        END
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=(CASE
                        WHEN (SELECT count(1)
                        FROM fms_ord_pending fop
                        WHERE fop.ORDER_ID = foo.ORDER_ID
                        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
                        AND foo.STATUS = 'APPROVING') > 0 THEN
                        'PENDING'
                        WHEN
                        (SELECT count(1)
                        FROM fms_ord_after foa
                        LEFT JOIN fms_ord_template fot
                        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
                        WHERE foa.ORDER_ID = foo.ORDER_ID
                        AND foo.SURRENDER_FLAG = 'Y'
                        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
                        'SURRENDERING'
                        ELSE
                        foo.STATUS
                        END)
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID
        LEFT JOIN FMS_ORD_ORDER rfoo
        ON rfoo.order_id = foo.related_order_id
        LEFT JOIN fms_ord_customer foca
        ON (foca.ORDER_ID = foo.ORDER_ID and foca.CUSTOMER_TYPE = 'APPLICANT')
        LEFT JOIN fms_ord_customer foci
        ON (foci.ORDER_ID = foo.ORDER_ID and foci.CUSTOMER_TYPE = 'INSURANT')
        WHERE 1=1
        <if test = "orderId != null"> AND foo.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foo.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foo.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foo.ORDER_ID
            AND foo.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foo.STATUS
            END) = #{status , jdbcType=VARCHAR} 
        	<if test="status == 'DATA_APPROVING'">
           	 	OR foo.STATUS IN ("DATA_APPROVING","PRE_APPROVED","PRE_APPROVING"))
            </if>
            <if test="status != 'DATA_APPROVING'">
            	OR foo.STATUS = #{status , jdbcType=VARCHAR})
            </if>    
        </if>
        <if test = "channelId != null"> AND foo.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "introducer != null"> AND foo.INTRODUCER = #{introducer} </if>
        <if test = "orderNumber != null"> AND foo.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foo.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "valueaddType != null"> AND foo.VALUEADD_TYPE = #{valueaddType , jdbcType=VARCHAR} </if>
        <if test = "applicant != null"> AND actm.CHINESE_NAME LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND ictm.CHINESE_NAME LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>

        <if test = "person != null">
            AND (actm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR ictm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foca.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%')
            OR foci.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%') )
        </if>

        <if test = "number != null">
            AND (foo.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foo.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "item != null">
            AND CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) LIKE concat('%',concat(#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "stockItem != null">
            AND (fpi.ATTRIBUTE50 LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%') OR fpi.ITEM_NAME LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "itemName != null">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "customerId != null ">
            AND (foo.APPLICANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL} OR
            foo.INSURANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL})
        </if>
        <!-- 增值服务添加查询条件 -->
        <if test = "orderNumber != null ">
            AND foo.ORDER_NUMBER LIKE concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
        </if>
        <if test = "itemName != null ">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>
        <if test = "relatedOrderNumber != null ">
            AND rfoo.ORDER_NUMBER LIKE concat('%',#{relatedOrderNumber , jdbcType=VARCHAR},'%')
        </if>
        <if test = "channelName != null ">
            AND fcc.CHANNEL_NAME LIKE concat('%',#{channelName,jdbcType=VARCHAR},'%')
        </if>
        <if test = "applicant != null ">
            AND actm.CHINESE_NAME LIKE concat('%',#{applicant,jdbcType=VARCHAR},'%')
        </if>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                <bind name="_colName" value="@com.hand.hap.mybatis.util.OGNL@unCamel(orderBy)"/>
                order by ${_colName}
            </when>
            <otherwise>
                ORDER BY
                CASE
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'UNSUBMITTED' THEN
                2
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'PENDING' THEN
                1
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                ELSE
                3
                END,
                foo.SUBMIT_DATE desc
            </otherwise>
        </choose>
    </select>

    <select id="queryPendingOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.MIGRATE_COUNTRY,
        foo.BUDGET,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.BACK_FLAG,
        foo.BACK_DATE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CASE foo.ORDER_TYPE
        WHEN 'VALUEADD' THEN
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        ELSE
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        END ITEM,

        CASE foo.ORDER_TYPE
        WHEN 'INSURANCE' THEN
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))))
        ELSE
        CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME))
        END NOTICE_ITEM,

        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        foca.SEX APPLICANT_SEX,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpi.ITEM_NAME,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        foo.RELATED_ORDER_ID,
        rfoo.ORDER_NUMBER RELATED_ORDER_NUMBER,
        foo.CUSTOMER_PRICE,
        foo.PRICE,
        foo.PEOPLE_COUNT,
        foo.PAY_AMOUNT,
        foo.VEHICLE_TYPE,
        foo.USER_HOUR,
        foo.DEPARTURE,
        foo.DESTINATION,
        foo.LODGER_NAME,
        foo.LODGER_PINYIN,
        foo.CUSTOMER_PHONE_CODE,
        foo.CUSTOMER_PHONE,
        foo.PRICE_INTERVAL,
        foo.CHECKIN_DATE,
        foo.CHECKOUT_DATE,
        foo.ROOM_COUNT,
        foo.ROOM_TYPE,
        foo.HOTEL_NAME,
        foo.VACCINE_CUSTOMER_NAME,
        foo.VACCINE_CUSTOMER_AGE,
        foo.VACCINE_CUSTOMER_SEX,
        foo.VACCINE_CUSTOMER_PASS,
        foo.VACCINE_CUSTOMER_TIMES,
        foo.KEEP_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.VALUEADD_TYPE,
        foo.SECURITY_LEVEL,
        foo.SECURITY_REGION,
        foo.SELFPAY,
        fpi.min_class,
        foo.SAME_FLAG,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.CHANNEL_CONTRACT_ID,
        foo.DEAL_PATH,
        pfss.FILE_ID PRD_SUPPLIER_FILE_ID,
        psffsf.FILE_PATH PRD_SUPPLIER_FILE_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.CREATED_BY ORDER_CREATED_BY,
        foo.RENEWAL_FLAG,
        foo.COMMON_NAME,
        foo.COMMON_PHONE,
        foo.COMMON_ADDR,
        foo.COMMON_REMARK,
        foo.COMMON_PHONE_CODE,
        (SELECT COUNT(1)
        FROM fms_ord_pending FOP
        WHERE FOP.ORDER_ID = FOO.ORDER_ID) COUNT_PENDING
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN sys_file psffsf
        ON psffsf.FILE_ID = pfss.FILE_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_code_b sc
        ON SC.code = case foo.order_type
        WHEN 'INSURANCE' THEN
        'ORD.ORDER_STATUS'
        WHEN 'BOND' THEN
        'ORD.BOND_STATUS'
        WHEN 'IMMIGRANT' THEN
        'ORD.IMMIGRANT_STATUS'
        WHEN 'VALUEADD' THEN
        'ORD.VALUEADD_STATUS'
        END
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=(CASE
        WHEN (SELECT count(1)
        FROM fms_ord_pending fop
        WHERE fop.ORDER_ID = foo.ORDER_ID
        AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
        AND foo.STATUS = 'APPROVING') > 0 THEN
        'PENDING'
        WHEN
        (SELECT count(1)
        FROM fms_ord_after foa
        LEFT JOIN fms_ord_template fot
        ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
        WHERE foa.ORDER_ID = foo.ORDER_ID
        AND foo.SURRENDER_FLAG = 'Y'
        AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
        'SURRENDERING'
        ELSE
        foo.STATUS
        END)

        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID
        LEFT JOIN FMS_ORD_ORDER rfoo
        ON rfoo.order_id = foo.related_order_id
        LEFT JOIN fms_ord_customer foca
        ON (foca.ORDER_ID = foo.ORDER_ID and foca.CUSTOMER_TYPE = 'APPLICANT')
        LEFT JOIN fms_ord_customer foci
        ON (foci.ORDER_ID = foo.ORDER_ID and foci.CUSTOMER_TYPE = 'INSURANT')
        WHERE 1=1

        AND (EXISTS (
        SELECT 1
        FROM fms_cnl_channel_contract fccc
        JOIN hr_employee he
        ON (fccc.POLICY_REVIEW = he.OWNERSHIP_TYPE
        AND (he.OWNERSHIP_TYPE = 'CLB_SUPPLIER'
        OR CASE fccc.POLICY_REVIEW WHEN 'SUPPLIER' THEN fccc.PARTY_ID WHEN 'CHANNEL' THEN fccc.CHANNEL_ID END = he.OWNERSHIP_ID))
        JOIN sys_user su
        ON (su.USER_TYPE = 'OPERATOR' AND su.RELATED_PARTY_ID = he.EMPLOYEE_ID)
        WHERE fccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        AND su.USER_ID = #{request.userId,jdbcType=DECIMAL})
        OR EXISTS (SELECT
        1
        FROM
        HCOM_DATA_RULES HRU
        JOIN	hcom_data_rule_assign HRUa
        ON HRU.RULE_ID = HRUa.RULE_ID
        and (HRUa.ASSIGN_TYPE = 'USER' AND hrua.TYPE_ID = #{request.userId,jdbcType=DECIMAL}
        OR HRUa.ASSIGN_TYPE = 'ROLE' AND EXISTS (SELECT 1
        FROM sys_user_role sur
        WHERE sur.role_id = hrua.TYPE_ID
        AND sur.user_id = #{request.userId,jdbcType=DECIMAL}) )
        WHERE HRU.RULE_NAME = 'PENDING'))

        <if test = "orderId != null"> AND foo.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null">
            AND ((CASE
            WHEN (SELECT count(1)
            FROM fms_ord_pending fop
            WHERE fop.ORDER_ID = foo.ORDER_ID
            AND fop.STATUS NOT IN ('PENDING_SUBMITTED','PENDING_CLOSED')
            AND foo.STATUS = 'APPROVING') > 0 THEN
            'PENDING'
            WHEN
            (SELECT count(1)
            FROM fms_ord_after foa
            LEFT JOIN fms_ord_template fot
            ON foa.TEMPLATE_ID = fot.TEMPLATE_ID and fot.TEMPLATE_TYPE_CODE = 'AFTER_SALES_SERVICE' and fot.APPLY_CLASS_CODE = 'EXIT'
            WHERE foa.ORDER_ID = foo.ORDER_ID
            AND foo.SURRENDER_FLAG = 'Y'
            AND foa.AFTER_STATUS not in ('FAIL','SUCCESS','CANCELED')) > 0 THEN
            'SURRENDERING'
            ELSE
            foo.STATUS
            END) = #{status , jdbcType=VARCHAR} OR foo.STATUS = #{status , jdbcType=VARCHAR}) </if>
        <if test = "channelId != null"> AND foo.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "introducer != null"> AND foo.INTRODUCER = #{introducer} </if>
        <if test = "orderNumber != null"> AND foo.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foo.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "valueaddType != null"> AND foo.VALUEADD_TYPE = #{valueaddType , jdbcType=VARCHAR} </if>
        <if test = "applicant != null"> AND actm.CHINESE_NAME LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND ictm.CHINESE_NAME LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>

        <if test = "person != null">
            AND (actm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR ictm.CHINESE_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foca.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%')
            OR foci.ENGLISH_NAME LIKE concat ('%',#{person , jdbcType=VARCHAR},'%') )
        </if>

        <if test = "number != null">
            AND (foo.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foo.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "item != null">
            AND CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) LIKE concat('%',concat(#{item , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "stockItem != null">
            AND (fpi.ATTRIBUTE50 LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%') OR fpi.ITEM_NAME LIKE concat('%',#{stockItem , jdbcType=VARCHAR},'%'))
        </if>

        <if test = "itemName != null">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foo.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'SIGN' AND  foo.SIGN_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foo.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "customerId != null ">
            AND (foo.APPLICANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL} OR
            foo.INSURANT_CUSTOMER_ID = #{customerId , jdbcType=DECIMAL})
        </if>
        <!-- 增值服务添加查询条件 -->
        <if test = "orderNumber != null ">
            AND foo.ORDER_NUMBER LIKE concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
        </if>
        <if test = "itemName != null ">
            AND fpi.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>
        <if test = "relatedOrderNumber != null ">
            AND rfoo.ORDER_NUMBER LIKE concat('%',#{relatedOrderNumber , jdbcType=VARCHAR},'%')
        </if>
        <if test = "channelName != null ">
            AND fcc.CHANNEL_NAME LIKE concat('%',#{channelName,jdbcType=VARCHAR},'%')
        </if>
        <if test = "applicant != null ">
            AND actm.CHINESE_NAME LIKE concat('%',#{applicant,jdbcType=VARCHAR},'%')
        </if>
        <if test = "policyNumber != null ">
            AND foo.POLICY_NUMBER LIKE concat('%',#{policyNumber,jdbcType=VARCHAR},'%')
        </if>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                <bind name="_colName" value="@com.hand.hap.mybatis.util.OGNL@unCamel(orderBy)"/>
                order by ${_colName}
            </when>
            <otherwise>
                ORDER BY
                CASE
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                WHEN foo.ORDER_TYPE = 'INSURANCE' AND foo.STATUS = 'UNSUBMITTED' THEN
                2
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'PENDING' THEN
                1
                WHEN foo.ORDER_TYPE = 'BOND' AND foo.STATUS = 'NEED_REVIEW' THEN
                2
                WHEN foo.ORDER_TYPE = 'VALUEADD' AND foo.STATUS = 'NEED_REVIEW' THEN
                1
                ELSE
                3
                END,
                foo.SUBMIT_DATE desc
            </otherwise>
        </choose>

    </select>

    <select id="queryUser" parameterType="clb.core.system.dto.ClbUser" resultMap="ClbUserResultMap">
        SELECT
        su.USER_ID,
        su.USER_TYPE,
        su.USER_NAME,
        su.employee_id,
        he.EMPLOYEE_CODE,
        he.NAME EMPLOYEE_NAME
        FROM
        sys_user AS su
        JOIN hr_employee he
        ON (su.RELATED_PARTY_ID = he.EMPLOYEE_ID AND su.USER_TYPE = 'OPERATOR')
        WHERE 1=1
        <if test="userId!=null and userId!=''">
            and su.USER_ID = #{userId}
        </if>
        <if test="employeeName!=null and employeeName!=''">
            and he.NAME = #{employeeName}
        </if>
    </select>
    
    <select id="queryField" parameterType="clb.core.order.dto.SysOrderCfgField" resultMap="FieldResultMap" >
        SELECT fsocf.FIELD_CODE,
		   fsocf.SEQ_NUM
        FROM fms_sys_order_cfg_field fsocf
        JOIN fms_sys_order_function_cfg fsofc
        ON fsocf.CFG_ID = fsofc.CFG_ID
        JOIN sys_function_b sfb
        ON fsofc.FUNCTION_ID = sfb.FUNCTION_ID
        WHERE 1=1
        <if test = "functionCode != null"> AND sfb.FUNCTION_CODE = #{functionCode , jdbcType=VARCHAR} </if>
        ORDER BY SEQ_NUM
    </select>

    <select id="queryOpera" parameterType="clb.core.order.dto.SysOrderCfgOperation" resultMap="OperaResultMap" >
        SELECT fsoco.OPERATION_CODE
        FROM fms_sys_order_cfg_operation fsoco
        JOIN fms_sys_order_function_cfg fsofc
        ON fsoco.CFG_ID = fsofc.CFG_ID
        JOIN sys_function_b sfb
        ON fsofc.FUNCTION_ID = sfb.FUNCTION_ID
        WHERE 1=1
        <if test = "functionCode != null"> AND sfb.FUNCTION_CODE = #{functionCode , jdbcType=VARCHAR} </if>
    </select>

    <!--<select id="querySupplierRelation" parameterType="clb.core.commission.dto.CmnSupplierRelation" resultMap="SupplierResultMap" >-->
        <!--SELECT-->
        <!--fcsr.RELATION_ID,-->
        <!--fcsr.SUPPLIER_ID,-->
        <!--fcsr.PARENT_SUPPLIER_ID,-->
        <!--fcsr.ITEM_ID-->
        <!--FROM FMS_CMN_SUPPLIER_RELATION fcsr-->
        <!--WHERE 1=1-->
        <!--AND CURDATE() BETWEEN fcsr.EFFECTIVE_START_DATE AND fcsr.EFFECTIVE_START_DATE-->
        <!--<if test = "supplierId != null"> AND fcsr.SUPPLIER_ID = #{supplierId , jdbcType=DECIMAL} </if>-->
        <!--<if test = "itemId != null"> AND fcsr.ITEM_ID = #{itemId , jdbcType=DECIMAL} </if>-->
    <!--</select>-->
    
    <select id="queryTradeRoute" parameterType="clb.core.commission.dto.CmnChannelCommission" resultMap="RouteResultMap" >
        SELECT * FROM
        (SELECT
        fccc.LINE_ID,
        fccc.DEAL_PATH,

        (SELECT fccr1.ROLE_USER_ID
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_cmn_channel_commission_show fccc1
        ON fccc1.LINE_ID = fctr1.COMPANY_COMMISSION_LINE_ID
        LEFT JOIN fms_cnl_contract_role fccr1
        ON fccr1.CHANNEL_CONTRACT_ID = fccc1.CHANNEL_CONTRACT_ID AND fccr1.ROLE = 'ADMINISTRATION'
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) - 1
        AND fctr1.COMPANY_TYPE = 'CHANNEL'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) ROLE_USER_ID,

        (SELECT fccc1.CHANNEL_CONTRACT_ID
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_cmn_channel_commission_show fccc1
        ON fccc1.LINE_ID = fctr1.COMPANY_COMMISSION_LINE_ID
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END)
        AND fctr1.COMPANY_TYPE = 'CHANNEL'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) CHANNEL_CONTRACT_ID,
        ( SELECT fctr1.COMPANY_ID
        FROM fms_cmn_trade_route_show fctr1
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 1
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) OWN_SUPPLIER_ID,
        ( SELECT fss.name
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 1
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) OWN_SUPPLIER_NAME,
        CASE max(fctr.SEQ_NUM) - max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END)
        WHEN 2 THEN
        ( SELECT fctr1.COMPANY_ID
        FROM fms_cmn_trade_route_show fctr1
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 1
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID)
        ELSE
        ( SELECT fctr1.COMPANY_ID
        FROM fms_cmn_trade_route_show fctr1
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 2
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID)
        END RESERVE_SUPPLIER_ID,
        CASE max(fctr.SEQ_NUM) - max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END)
        WHEN 2 THEN
        ( SELECT fss.name
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 1
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID)
        ELSE
        ( SELECT fss.name
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.SEQ_NUM = max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 2
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID)
        END RESERVE_SUPPLIER_NAME,
        CASE
        WHEN max(fctr.SEQ_NUM) - max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) &gt; 4 THEN
        ( SELECT group_concat(fss.name order by SEQ_NUM)
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.SEQ_NUM &gt; max(case fctr.company_type when 'CHANNEL' then fctr.SEQ_NUM ELSE 0 END) + 2
        AND fctr1.SEQ_NUM &lt; max(fctr.SEQ_NUM) -1
        AND fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID)
        END MIDDLE_SUPPLIER_NAME,
        ( SELECT fctr1.COMPANY_ID
        FROM fms_cmn_trade_route_show fctr1
        WHERE fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.SEQ_NUM = max(fctr.SEQ_NUM) - 1
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) SIGN_SUPPLIER_ID,
        (SELECT fss.name
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.SEQ_NUM = max(fctr.SEQ_NUM) - 1
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) SIGN_SUPPLIER_NAME,
        (SELECT fss.name
        FROM fms_cmn_trade_route_show fctr1
        JOIN fms_spe_supplier fss
        ON fctr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fctr1.COMPANY_TYPE = 'SUPPLIER'
        AND fctr1.SEQ_NUM = max(fctr.SEQ_NUM)
        AND fctr1.CHANNEL_COMMISSION_LINE_ID = fccc.LINE_ID) INSURANCE_SUPPLIER_NAME
        FROM fms_cmn_channel_commission_show fccc
        JOIN fms_cmn_trade_route_show fctr ON fccc.LINE_ID = fctr.CHANNEL_COMMISSION_LINE_ID
        WHERE 1=1
        <if test = "lineId != null"> AND fccc.LINE_ID = #{lineId , jdbcType=DECIMAL} </if>
        <if test = "reserveDateSting != null"> AND STR_TO_DATE(#{reserveDateSting , jdbcType=VARCHAR},'%Y-%m-%d') BETWEEN fccc.EFFECTIVE_START_DATE AND fccc.EFFECTIVE_END_DATE </if>
        <if test = "channelId != null"> AND fccc.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "itemId != null"> AND fccc.ITEM_ID = #{itemId , jdbcType=DECIMAL} </if>
        <if test = "contributionPeriod != null"> AND fccc.CONTRIBUTION_PERIOD = #{contributionPeriod , jdbcType=VARCHAR} </if>
        <if test = "dealPath != null"> AND fccc.DEAL_PATH = #{dealPath , jdbcType=VARCHAR} </if>
        <if test = "insurantAge != null"> AND #{insurantAge , jdbcType=DECIMAL} BETWEEN fccc.POLICYHOLDERS_MIN_AGE AND fccc.POLICYHOLDERS_MAX_AGE</if>
        <if test = "currency != null"> AND fccc.currency = #{currency , jdbcType=VARCHAR} </if>
        <if test = "payMethod != null">
            AND (fccc.PAY_METHOD = #{payMethod , jdbcType=VARCHAR} OR (#{payMethod , jdbcType=VARCHAR} = 'FJ' AND fccc.PAY_METHOD = 'AP'))
        </if>

        <if test = "addItems != null">
            AND #{addCount , jdbcType=DECIMAL} =
            (SELECT
            count(DISTINCT fpi.ITEM_ID, fpis.SUBLINE_ITEM_NAME)
            FROM
            fms_prd_items fpi
            JOIN fms_prd_item_subline fpis
            ON fpi.ITEM_ID = fpis.ITEM_ID AND #{addItems , jdbcType=VARCHAR} LIKE concat('%,',fpi.ITEM_ID,'-',fpis.SUBLINE_ITEM_NAME ,',%')
            LEFT JOIN fms_cmn_channel_commission_show fccc2
            ON fpi.item_id = fccc2.item_id AND fpis.SUBLINE_ITEM_NAME = fccc2.CONTRIBUTION_PERIOD
            LEFT JOIN fms_cmn_adt_risk_relation fcdrr
            ON fpi.item_id = fcdrr.SUB_ITEM_ID
            WHERE (fccc2.CHANNEL_ID = fccc.CHANNEL_ID
            <if test = "reserveDateSting != null"> AND STR_TO_DATE(#{reserveDateSting , jdbcType=VARCHAR},'%Y-%m-%d') BETWEEN fccc2.EFFECTIVE_START_DATE AND fccc2.EFFECTIVE_END_DATE </if>
            <if test = "insurantAge != null"> AND #{insurantAge , jdbcType=DECIMAL} BETWEEN fccc2.POLICYHOLDERS_MIN_AGE AND fccc2.POLICYHOLDERS_MAX_AGE</if>
            <if test = "currency != null"> AND fccc2.currency = #{currency , jdbcType=VARCHAR} </if>
            <if test = "payMethod != null">
                AND (fccc2.PAY_METHOD = #{payMethod , jdbcType=VARCHAR} OR (#{payMethod , jdbcType=VARCHAR} = 'FJ' AND fccc2.PAY_METHOD = 'AP'))
            </if>
            AND fccc2.DEAL_PATH = fccc.DEAL_PATH)
            OR (fcdrr.ITEM_ID = fccc.ITEM_ID AND fcdrr.DEPEND_MAIN_FLAG = 'Y') OR (fcdrr.ITEM_ID IS NULL AND fcdrr.DEPEND_MAIN_FLAG = 'Y'))
        </if>

        GROUP BY fccc.LINE_ID) ctr
        WHERE 1=1
        <if test = "supplierLimit != null and supplierLimit != ''">
        AND EXISTS (SELECT HE.OWNERSHIP_ID
        FROM sys_user su
        LEFT JOIN hr_employee HE
        ON SU.user_type = 'OPERATOR' AND SU.RELATED_PARTY_ID = HE.EMPLOYEE_ID
        WHERE SU.USER_ID = #{request.userId,jdbcType=DECIMAL}
        AND (HE.OWNERSHIP_TYPE = 'SUPPLIER' AND HE.OWNERSHIP_ID = ctr.OWN_SUPPLIER_ID OR HE.OWNERSHIP_TYPE IS NULL OR HE.OWNERSHIP_TYPE !='SUPPLIER'))
        </if>
    </select>

    <select id="validateTradeRoute" parameterType="clb.core.commission.dto.CmnChannelCommission" resultMap="RouteResultMap" >
        SELECT fccc.*
        FROM fms_cmn_channel_commission_show fccc
        WHERE 1=1
        <if test = "reserveDate != null"> AND #{reserveDate , jdbcType=DATE} BETWEEN fccc.EFFECTIVE_START_DATE AND fccc.EFFECTIVE_END_DATE </if>
        <if test = "channelId != null"> AND fccc.CHANNEL_ID = #{channelId , jdbcType=DECIMAL} </if>
        <if test = "dealPath != null"> AND fccc.DEAL_PATH = #{dealPath , jdbcType=VARCHAR} </if>
        <if test = "itemId != null"> AND fccc.ITEM_ID = #{itemId , jdbcType=DECIMAL} </if>
        <if test = "contributionPeriod != null"> AND fccc.CONTRIBUTION_PERIOD = #{contributionPeriod , jdbcType=VARCHAR} </if>
        <if test = "currency != null"> AND fccc.currency = #{currency , jdbcType=VARCHAR} </if>
        <if test = "payMethod != null">
            AND (fccc.PAY_METHOD = #{payMethod , jdbcType=VARCHAR} OR (#{payMethod , jdbcType=VARCHAR} = 'FJ' AND fccc.PAY_METHOD = 'AP'))
        </if>
    </select>

    <select id="queryOrdTradeRoute" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT
        fotr.ORDER_ID,
        ( SELECT fcc.CHANNEL_NAME
        FROM fms_ord_trade_route fotr1
        JOIN fms_cnl_channel fcc
        ON fotr1.COMPANY_ID = fcc.CHANNEL_ID
        WHERE fotr1.SEQ_NUM = 1
        AND fotr1.COMPANY_TYPE = 'CHANNEL'
        AND fotr1.order_id = fotr.order_id) CHANNEL_NAME,
        ( SELECT fss.name
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.SEQ_NUM = 2
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.order_id = fotr.order_id) OWN_SUPPLIER_NAME,
        CASE max(fotr.SEQ_NUM)
        WHEN 3 THEN
        ( SELECT fotr1.COMPANY_ID
        FROM fms_ord_trade_route fotr1
        WHERE fotr1.SEQ_NUM = 2
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.ORDER_ID = fotr.ORDER_ID)
        ELSE
        ( SELECT fotr1.COMPANY_ID
        FROM fms_ord_trade_route fotr1
        WHERE fotr1.SEQ_NUM = 3
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.ORDER_ID = fotr.ORDER_ID)
        END RESERVE_SUPPLIER_ID,
        CASE max(fotr.SEQ_NUM)
        WHEN 3 THEN
        ( SELECT fss.name
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.SEQ_NUM = 2
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.ORDER_ID = fotr.ORDER_ID)
        ELSE
        ( SELECT fss.name
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.SEQ_NUM = 3
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.ORDER_ID = fotr.ORDER_ID)
        END RESERVE_SUPPLIER_NAME,
        CASE
        WHEN max(fotr.SEQ_NUM) &gt; 5 THEN
        ( SELECT group_concat(fss.name order by SEQ_NUM)
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.SEQ_NUM &gt; 3
        AND fotr1.SEQ_NUM &lt; max(fotr.SEQ_NUM) -1
        AND fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.order_id = fotr.ORDER_ID)
        END MIDDLE_SUPPLIER_NAME,
        ( SELECT fotr1.COMPANY_ID
        FROM fms_ord_trade_route fotr1
        WHERE fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.SEQ_NUM = max(fotr.SEQ_NUM) - 1
        AND fotr1.order_id = fotr.ORDER_ID) SIGN_SUPPLIER_ID,
        (SELECT fss.name
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.SEQ_NUM = max(fotr.SEQ_NUM) - 1
        AND fotr1.order_id = fotr.ORDER_ID) SIGN_SUPPLIER_NAME,
        (SELECT fss.name
        FROM fms_ord_trade_route fotr1
        JOIN fms_spe_supplier fss
        ON fotr1.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr1.COMPANY_TYPE = 'SUPPLIER'
        AND fotr1.SEQ_NUM = max(fotr.SEQ_NUM)
        AND fotr1.order_id = fotr.ORDER_ID) INSURANCE_SUPPLIER_NAME
        FROM fms_ord_trade_route fotr
        WHERE 1=1
        <if test = "orderId != null"> AND fotr.order_id = #{orderId , jdbcType=DECIMAL} </if>
        GROUP BY fotr.order_id
    </select>

    <select id="queryChannelRelation" parameterType="clb.core.order.dto.OrdTradeRoute" resultMap="RelationResultMap" >
        SELECT
        fotr.COMPANY_ID,
        fss.NAME COMPANY_NAME,
        fotr.ATTRIBUTE1,
        fotr.ATTRIBUTE2,
        fotr.ATTRIBUTE3,
        fotr.ATTRIBUTE4,
        fotr.ATTRIBUTE5,
        fotr.ATTRIBUTE6,
        fotr.ATTRIBUTE7,
        fotr.ATTRIBUTE8,
        fotr.ATTRIBUTE9,
        fotr.ATTRIBUTE10,
        fotr.ATTRIBUTE11,
        fotr.ATTRIBUTE12,
        fotr.ATTRIBUTE13,
        fotr.ATTRIBUTE14,
        fotr.ATTRIBUTE15,
        0 CHANNEL_COUNT
        FROM fms_ord_trade_route fotr
        JOIN fms_spe_supplier fss
        ON fotr.COMPANY_ID = fss.SUPPLIER_ID
        WHERE fotr.ORDER_ID = #{orderId , jdbcType=DECIMAL}
        AND fotr.COMPANY_TYPE = 'SUPPLIER'
        AND fotr.SUPPLIER_TYPE = 'OWN'
    </select>

    <select id="queryOrderStatus" parameterType="clb.core.system.dto.ClbCodeValue" resultMap="CodeResultMap" >
        SELECT * FROM
        (SELECT scvb.code_value_id,
        scvb.code_id,
        scvb.value,
        sct.meaning,
        sct.description,
        scvb.order_seq,
        scvb.enabled_flag,
        scvb.parent_value,
        #{functionCode , jdbcType=VARCHAR} FUNCTION_CODE
        FROM sys_code_value_b scvb
        JOIN sys_code_b scb
        ON scb.code_id = scvb.code_id AND scb.code = 'ORD.ORDER_STATUS'
        LEFT OUTER JOIN sys_code_value_tl sct
        ON (scvb.code_value_id = sct.code_value_id AND sct.lang = #{request.locale,jdbcType=VARCHAR})) scvp
        WHERE 1=1
        <if test = "value != null"> AND scvp.value LIKE CONCAT('%', #{value , jdbcType=VARCHAR}, '%') </if>
        <if test = "meaning != null"> AND scvp.meaning LIKE CONCAT('%', #{meaning , jdbcType=VARCHAR}, '%') </if>
        ORDER BY scvp.code_value_Id ASC
    </select>

    <select id="queryOrderAppStatus" parameterType="clb.core.system.dto.ClbCodeValue" resultMap="CodeResultMap" >
        SELECT * FROM
        (SELECT scvb.code_value_id,
        scvb.code_id,
        scvb.value,
        sct.meaning,
        sct.description,
        scvb.order_seq,
        scvb.enabled_flag,
        scvb.parent_value,
        #{functionCode , jdbcType=VARCHAR} FUNCTION_CODE
        FROM sys_code_value_b scvb
        JOIN sys_code_b scb
        ON scb.code_id = scvb.code_id AND scb.code = 'ORD.ORDER_APPLICATION_STATUS'
        LEFT OUTER JOIN sys_code_value_tl sct
        ON (scvb.code_value_id = sct.code_value_id AND sct.lang = #{request.locale,jdbcType=VARCHAR})) scvp
        WHERE 1=1
        <if test = "value != null"> AND scvp.value LIKE CONCAT('%', #{value , jdbcType=VARCHAR}, '%') </if>
        <if test = "meaning != null"> AND scvp.meaning LIKE CONCAT('%', #{meaning , jdbcType=VARCHAR}, '%') </if>
        ORDER BY scvp.code_value_Id ASC
    </select>

    <select id="querySpeSupplierSettle" parameterType="clb.core.supplier.dto.SpeSupplierSettle" resultMap="SettleResultMap" >
        SELECT
        fsss.SETTLE_ID,
        fsss.CONTRACT_ID,
        fsss.COST_NAME,
        fsss.SETTLE_TYPE_CODE,
        fsss.AMOUNT,
        fsss.CURRENCY_CODE,
        fsss.PROGRAM_ID,
        fsss.REQUEST_ID
        FROM fms_spe_supplier_settle fsss
        JOIN fms_spe_contract fsc
        ON fsc.CONTRACT_ID = fsss.CONTRACT_ID
        WHERE 1=1
        <if test = "supplierId != null"> AND fsc.SUPPLIER_ID = #{supplierId , jdbcType=DECIMAL} </if>
        <if test = "costName != null"> AND fsss.COST_NAME = #{costName , jdbcType=DECIMAL} </if>
    </select>

    <select id="queryImmigrantOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT * FROM
        (SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.ISSUE_DATE,
        foo.PAY_METHOD,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        foo.ORDER_TYPE,
        foo.BUDGET,
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        fpi.ITEM_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        /*ifcc.USER_NAME INTRODUCER_NAME,*/
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        foo.PRODUCT_MANAGER,
        FOO.PRODUCT_MANAGER_PHONE,
        foo.MIGRATE_COUNTRY,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.DEAL_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.RENEWAL_FLAG,
        foo.ORDER_DEAL_USER_ID,
        odrpt.key_name ORDER_DEAL_NAME
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN sys_user ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_user odsu
        ON (foo.order_deal_user_id = odsu.user_id)
        LEFT JOIN (
        SELECT EMPLOYEE_ID key_id, NAME key_name, 'OPERATOR' key_type ,PHONE_CODE FROM hr_employee
        UNION
        SELECT CHANNEL_ID, CHANNEL_NAME, 'CHANNEL',PHONE_CODE FROM fms_cnl_channel
        UNION
        SELECT SUPPLIER_ID, NAME, 'SUPPLIER','' PHONE_CODE FROM fms_spe_supplier
        UNION
        SELECT CUSTOMER_ID, CHINESE_NAME, 'CUSTOMER','' PHONE_CODE FROM fms_ctm_customer ) odrpt
        ON (odsu.RELATED_PARTY_ID = odrpt.key_id AND odsu.USER_TYPE = odrpt.key_type)

        LEFT JOIN sys_code_b sc
        ON SC.code = 'ORD.IMMIGRANT_STATUS'
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=foo.STATUS
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID) foop
        WHERE 1=1
        AND foop.ORDER_TYPE = 'IMMIGRANT'
        <if test = "orderId != null"> AND foop.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null"> AND foop.STATUS = #{status , jdbcType=VARCHAR} </if>
        <if test = "sublineId != null"> AND foop.SUBLINE_ID = #{sublineId , jdbcType=DECIMAL} </if>
        <if test = "applicant != null"> AND foop.APPLICANT LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND foop.INSURANT LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>
        <if test = "policyNumber != null"> AND foop.POLICY_NUMBER LIKE concat('%',#{policyNumber , jdbcType=VARCHAR},'%') </if>
        <if test = "orderNumber != null"> AND foop.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>
        <if test = "orderType != null"> AND foop.ORDER_TYPE = #{orderType , jdbcType=VARCHAR} </if>
        <if test = "applicantCustomerId != null"> AND foop.APPLICANT_CUSTOMER_ID = #{applicantCustomerId , jdbcType=DECIMAL} </if>
        <if test = "itemName != null">
            AND foop.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "channelName != null">
            AND foop.CHANNEL_NAME LIKE concat('%',#{channelName , jdbcType=VARCHAR},'%')
        </if>
        <if test = "companyChannelName != null">
            AND foop.COMPANY_CHANNEL_NAME LIKE concat('%',#{companyChannelName , jdbcType=VARCHAR},'%')
        </if>

        ORDER BY FOOP.SUBMIT_DATE DESC

    </select>

    <select id="queryBondOrder" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT * FROM
        (SELECT
        foo.ORDER_ID,
        foo.ORDER_NUMBER,
        foo.POLICY_NUMBER,
        foo.PAY_NUMBER,
        foo.CUSTOMER_NUMBER,
        foo.COMPANY_CHANNEL_ID,
        foo.CHANNEL_ID,
        foo.CONTRACT_ROLE_ID,
        foo.PRODUCT_SUPPLIER_ID,
        foo.ITEM_ID,
        foo.SUBLINE_ID,
        foo.CURRENCY,
        foo.PAY_METHOD,
        foo.KEEP_FLAG,
        foo.YEAR_PAY_AMOUNT,
        foo.POLICY_AMOUNT,
        foo.APPLICANT_CUSTOMER_ID,
        foo.INSURANT_CUSTOMER_ID,
        foo.INCREASE_FLAG,
        foo.SUBMIT_DATE,
        foo.RESERVE_DATE,
        foo.RESERVE_ARRIVAL_DATE,
        foo.RESERVE_CHECK_DATE,
        foo.SIGN_DATE,
        foo.EFFECTIVE_DATE,
        foo.APPROVE_DATE,
        foo.EXPECT_COOL_DATE,
        foo.FIRST_PAY_DATE,
        foo.RENEWAL_DUE_DATE,
        foo.RENEWAL_SUCCESS_DATE,
        foo.GRACE_DATE,
        foo.ADMINISTRATIVE_DATE,
        foo.STATUS,
        foo.CLUB_CONFIRM_STATUS,
        foo.CUSTOMER_CONFIRM_STATUS,
        foo.APPLICATION_STATUS,
        foo.CUSTOMER_USER_ID,
        foo.SMS_FLAG,
        foo.CUSTOMER_OPERATE_DATE,
        foo.HK_CONTACT_PERSON,
        foo.HK_CONTACT_PHONE,
        foo.HK_CONTACT_PHONE_CODE,
        concat('(',foo.HK_CONTACT_PHONE_CODE,')',foo.HK_CONTACT_PHONE) HK_CONTACT_PHONE_ALL,
        foo.RECEIPT_DATE,
        foo.QUICK_CHECK_FLAG,
        foo.ELE_INSURANCE_FLAG,
        foo.FILL_USER_ID,
        foo.SIGN_ASSISTANT,
        sahe.NAME SIGN_ASSISTANT_NAME,
        foo.ARRIVAL_DATE,
        foo.LEAVE_DATE,
        foo.PHONE_FLAG,
        foo.CONTACT_PERSON,
        foo.CONTACT_PHONE,
        foo.SIGN_ADDRESS,
        foo.MEET_ADDRESS,
        foo.RESERVE_SUPPLIER_ID,
        foo.RESERVE_COMMENT,
        foo.RESERVE_USER_ID,
        foo.SIGN_SUPPLIER_ID,
        foo.OWN_SUPPLIER_ID,
        foo.SIGN_PERSON,
        foo.EXPRESS_DELIVERY_INFO,
        foo.RECEPTION_USER_ID,
        foo.REVIEWER1,
        foo.REVIEWER1_DATE,
        foo.REVIEWER2,
        foo.REVIEWER2_DATE,
        foo.REVIEWER_COMMENT,
        rhe1.NAME REVIEWER1_NAME,
        rhe2.NAME REVIEWER2_NAME,
        foo.SEND_USER_ID,
        foo.SEND_DATE,
        foo.SEND_STATUS,
        foo.PLAN_FILE_ID,
        foo.REQ_FILE_ID,
        foo.NEXT_POLICY_AMOUNT,
        foo.NEXT_POLICY_DUE_DATE,
        foo.FIRST_PAYMENT_METHOD,
        foo.RENEWAL_PAYMENT_METHOD,
        foo.RENEWAL_OTHER,
        foo.DDA_FLAG,
        foo.DDA_SUBMIT_DATE,
        foo.DDA_EFFECTIVE_DATE,
        foo.FEEDBACK_BALANCE,
        foo.ACCOUNT_BALANCE,
        foo.BALANCE_CURRENCY,
        foo.BALANCE_PAYMENT_METHOD,
        foo.ORDER_TYPE,
        foo.PROGRAM_ID,
        foo.REQUEST_ID,
        CONCAT(pfss.NAME, CONCAT('-', CONCAT(fpi.ITEM_NAME, CONCAT('-', fpis.SUBLINE_ITEM_NAME)))) ITEM,
        rfhe.NAME ROLE_NAME,
        cfcc.CHANNEL_NAME COMPANY_CHANNEL_NAME,
        fcc.CHANNEL_NAME,
        actm.CHINESE_NAME APPLICANT,
        ictm.CHINESE_NAME INSURANT,
        sfss.NAME SIGN_SUPPLIER_NAME,
        rfss.NAME RESERVE_SUPPLIER_NAME,
        pfss.NAME PRODUCT_SUPPLIER_NAME,
        fpi.ITEM_NAME,
        CONCAT(fpi.ITEM_NAME, '-', fpis.SUBLINE_ITEM_NAME,'-', actm.CHINESE_NAME,'-',ictm.CHINESE_NAME) ORDER_INFO,
        che.name CUSTOMER_EMPLOYEE_NAME,
        fhe.name FILL_EMPLOYEE_NAME,
        she.name SEND_EMPLOYEE_NAME,
        scvt.MEANING STATUS_DESC,
        fpis.SUBLINE_ITEM_NAME,
        fotrs.channel_count TR_CHANNEL_COUNT,
        fotrs.supplier_count TR_SUPPLIER_COUNT,
        foo.INTRODUCER,
        ifcc.USER_NAME INTRODUCER_NAME,
        foo.INTRODUCE_BENEFIT,
        (SELECT foc.BIRTH_DATE
        from fms_ord_customer foc where foc.ORDER_ID= foo.order_id
        and foc.CUSTOMER_TYPE = 'INSURANT') INSURANT_BIRTH_DATE,
        foo.SIGN_FEE,
        foo.CARD_FEE,
        foo.PAY_PERIODS,
        #{functionCode , jdbcType=VARCHAR} FUNCTION_CODE,
        fpi.ATTRIBUTE50 STOCK_CODE,
        fpi.ATTRIBUTE52 ANNUAL_INTEREST,
        fpi.ATTRIBUTE53 DIVIDEND_PERIOD,
        fpi.ATTRIBUTE56 SUBSCRIPTION_FEE,
        fpi.ATTRIBUTE55 CUSTODY_FEE,
        foo.ISSUE_DATE,
        foo.DIVIDEND_DATE1,
        foo.DIVIDEND_DATE2,
        foo.DIVIDEND_DATE,
        foo.PRODUCT_MANAGER,
        foo.PRODUCT_MANAGER_PHONE,
        foo.RESERVE_CONTACT_PERSON,
        foo.RESERVE_CONTACT_PHONE_CODE,
        foo.RESERVE_CONTACT_PHONE,
        foo.CIES_FLAG,
        foo.CIES_PROCESS_RATE,
        foo.INVESTED_ITEM,
        foo.INVESTED_OTHER,
        foo.INVESTED_SUBLINE,
        fpi.FULLYEAR,
        fpi.ONEYEAR,
        fpi.HALFYEAR,
        fpi.QUARTER,
        fpi.ONEMONTH,
        fpi.PREPAY_FLAG,
        foo.DEAL_PATH,
        pfss.AGE_CALCULATE_STANDARD,
        foo.DESCRIPTION,
        foo.RENEWAL_FLAG,
        foo.AGREED_PAYMENT_DATE,
        foo.ORDER_DEAL_USER_ID,
        odrpt.key_name ORDER_DEAL_NAME
        FROM
        fms_ord_order AS foo
        LEFT JOIN fms_spe_supplier pfss
        ON pfss.SUPPLIER_ID = foo.PRODUCT_SUPPLIER_ID
        LEFT JOIN fms_prd_items fpi
        ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_prd_item_subline fpis
        ON fpis.SUBLINE_ID = foo.SUBLINE_ID

        LEFT JOIN fms_cnl_channel_contract rfccc
        ON rfccc.CHANNEL_CONTRACT_ID = foo.CHANNEL_CONTRACT_ID
        LEFT JOIN sys_user rfcc
        ON (rfccc.BUSINESS_STAFF_USER_ID = rfcc.USER_ID AND rfcc.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rfhe
        ON rfcc.RELATED_PARTY_ID = rfhe.EMPLOYEE_ID

        LEFT JOIN SYS_USER ifcc
        ON foo.INTRODUCER = ifcc.USER_ID
        LEFT JOIN fms_cnl_channel cfcc
        ON cfcc.CHANNEL_ID = foo.COMPANY_CHANNEL_ID
        LEFT JOIN fms_cnl_channel fcc
        ON fcc.CHANNEL_ID = foo.CHANNEL_ID
        LEFT JOIN fms_ctm_customer actm
        ON actm.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
        LEFT JOIN fms_ctm_customer ictm
        ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
        LEFT JOIN fms_spe_supplier sfss
        ON sfss.SUPPLIER_ID = foo.SIGN_SUPPLIER_ID
        LEFT JOIN fms_spe_supplier rfss
        ON rfss.SUPPLIER_ID = foo.RESERVE_SUPPLIER_ID
        LEFT JOIN sys_user csu
        ON (foo.CUSTOMER_USER_ID = csu.user_id AND csu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee che
        ON csu.RELATED_PARTY_ID = che.EMPLOYEE_ID
        LEFT JOIN sys_user fsu
        ON (foo.FILL_USER_ID = fsu.user_id AND fsu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee fhe
        ON fsu.RELATED_PARTY_ID = fhe.EMPLOYEE_ID
        LEFT JOIN sys_user ssu
        ON (foo.SEND_USER_ID = ssu.user_id AND ssu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee she
        ON ssu.RELATED_PARTY_ID = she.EMPLOYEE_ID

        LEFT JOIN sys_user sasu
        ON (foo.SIGN_ASSISTANT = sasu.user_id AND sasu.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee sahe
        ON sasu.RELATED_PARTY_ID = sahe.EMPLOYEE_ID

        LEFT JOIN sys_user rsu1
        ON (foo.reviewer1 = rsu1.user_id AND rsu1.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe1
        ON rsu1.RELATED_PARTY_ID = rhe1.EMPLOYEE_ID

        LEFT JOIN sys_user rsu2
        ON (foo.reviewer2 = rsu2.user_id AND rsu2.USER_TYPE = 'OPERATOR')
        LEFT JOIN hr_employee rhe2
        ON rsu2.RELATED_PARTY_ID = rhe2.EMPLOYEE_ID

        LEFT JOIN sys_user odsu
        ON (foo.order_deal_user_id = odsu.user_id)
        LEFT JOIN (
        SELECT EMPLOYEE_ID key_id, NAME key_name, 'OPERATOR' key_type ,PHONE_CODE FROM hr_employee
        UNION
        SELECT CHANNEL_ID, CHANNEL_NAME, 'CHANNEL',PHONE_CODE FROM fms_cnl_channel
        UNION
        SELECT SUPPLIER_ID, NAME, 'SUPPLIER','' PHONE_CODE FROM fms_spe_supplier
        UNION
        SELECT CUSTOMER_ID, CHINESE_NAME, 'CUSTOMER','' PHONE_CODE FROM fms_ctm_customer ) odrpt
        ON (odsu.RELATED_PARTY_ID = odrpt.key_id AND odsu.USER_TYPE = odrpt.key_type)

        LEFT JOIN sys_code_b sc
        ON SC.code = 'ORD.BOND_STATUS'
        LEFT JOIN sys_code_value_b scvb
        ON scvb.code_id=sc.code_id
        AND scvb.value=foo.STATUS
        LEFT JOIN sys_code_value_tl scvt
        ON scvt.code_value_id=scvb.code_value_id
        AND scvt.lang = #{request.locale, jdbcType = VARCHAR}
        LEFT JOIN FMS_ORD_TRADE_ROUTE_SHOW fotrs
        ON foo.ORDER_ID = fotrs.ORDER_ID) foop
        WHERE 1=1
        AND foop.ORDER_TYPE = 'BOND'
        <if test = "orderId != null"> AND foop.ORDER_ID = #{orderId , jdbcType=DECIMAL} </if>
        <if test = "status != null"> AND foop.STATUS = #{status , jdbcType=VARCHAR} </if>
        <if test = "sublineId != null"> AND foop.SUBLINE_ID = #{sublineId , jdbcType=DECIMAL} </if>
        <if test = "applicant != null"> AND foop.APPLICANT LIKE concat('%',#{applicant , jdbcType=VARCHAR},'%') </if>
        <if test = "insurant != null"> AND foop.INSURANT LIKE concat('%',#{insurant , jdbcType=VARCHAR},'%') </if>
        <if test = "policyNumber != null"> AND foop.POLICY_NUMBER LIKE concat('%',#{policyNumber , jdbcType=VARCHAR},'%') </if>
        <if test = "person != null">
            AND (foop.CHANNEL_NAME LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foop.APPLICANT LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%'))
            OR foop.INSURANT LIKE concat('%',concat(#{person , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "orderNumber != null"> AND foop.ORDER_NUMBER LIKE concat('%',concat(#{orderNumber , jdbcType=VARCHAR},'%')) </if>

        <if test = "number != null">
            AND (foop.ORDER_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%'))
            OR foop.POLICY_NUMBER LIKE concat('%',concat(#{number , jdbcType=VARCHAR},'%')))
        </if>

        <if test = "dateType != null ">
            <if test = "startDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foop.SUBMIT_DATE &gt;= #{startDateActive,jdbcType=DATE})
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foop.RESERVE_DATE &gt;= #{startDateActive,jdbcType=DATE}))
            </if>
            <if test = "endDateActive != null">
                AND  ((#{dateType , jdbcType=VARCHAR} = 'SUBMIT' AND  foop.SUBMIT_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day))
                OR (#{dateType , jdbcType=VARCHAR} = 'RESERVE' AND  foop.RESERVE_DATE &lt; date_add(#{endDateActive,jdbcType=DATE}, INTERVAL 1 day)))
            </if>
        </if>

        <if test = "itemName != null">
            AND foop.ITEM_NAME LIKE concat('%',#{itemName , jdbcType=VARCHAR},'%')
        </if>

        <if test = "channelName != null">
            AND foop.CHANNEL_NAME LIKE concat('%',#{channelName , jdbcType=VARCHAR},'%')
        </if>

        ORDER BY FOOP.SUBMIT_DATE DESC

    </select>

    <select id="queryRole" parameterType="clb.core.system.dto.ClbUser" resultMap="ClbUserResultMap">
        SELECT su.USER_ID,su.user_name,he.NAME EMPLOYEE_NAME
        FROM sys_user su
        JOIN hr_employee he
        ON (su.USER_TYPE = 'OPERATOR' AND su.RELATED_PARTY_ID = he.EMPLOYEE_ID)
        JOIN sys_user_role sur
        ON sur.USER_ID = su.USER_ID
        JOIN sys_role_b srb
        ON srb.ROLE_ID = sur.ROLE_ID
        WHERE 1=1
        AND (he.OWNERSHIP_ID = #{ownershipId , jdbcType=DECIMAL} OR he.OWNERSHIP_TYPE = 'CLB_SUPPLIER')
        <if test = "ownershipType != null"> AND he.OWNERSHIP_TYPE = #{ownershipType , jdbcType=VARCHAR} </if>
        <if test = "roleCode != null"> AND srb.ROLE_CODE = #{roleCode , jdbcType=VARCHAR} </if>
        order by su.user_name
    </select>

    <select id="queryUserRole" parameterType="clb.core.system.dto.ClbUser" resultMap="ClbUserResultMap">
        SELECT su.USER_ID,su.user_name,su.user_type,srb.ROLE_CODE
        FROM sys_user su
        JOIN sys_user_role sur
        ON sur.USER_ID = su.USER_ID
        JOIN sys_role_b srb
        ON srb.ROLE_ID = sur.ROLE_ID
        WHERE 1=1
        <if test = "userId != null"> AND su.USER_ID = #{userId , jdbcType=DECIMAL} </if>
    </select>


    <resultMap id="AddrResultMap" type="clb.core.supplier.dto.SpeSupplierLine">
        <result column="SPE_LINE_ID" property="speLineId" />
        <result column="SUPPLIER_ID" property="supplierId" />
        <result column="ADDR_NAME" property="addrName" />
        <result column="ADDR" property="addr" />
        <result column="CONTRACT_PERSON" property="contractPerson" />
        <result column="CONTRACT_NUM" property="contractNum" />
    </resultMap>

    <select id="queryAddress" parameterType="clb.core.supplier.dto.SpeSupplierLine" resultMap="AddrResultMap" >
        SELECT scvb.value ADDR_NAME,
        sct.meaning ADDR
        FROM sys_code_value_b scvb
        JOIN sys_code_b scb
        ON scb.code_id = scvb.code_id
        AND scb. CODE = 'ORD.ORDER_ADDRESS'
        LEFT OUTER JOIN sys_code_value_tl sct
        ON (scvb.code_value_id = sct.code_value_id AND sct.lang = #{request.locale,jdbcType=VARCHAR})
        UNION ALL
        SELECT ADDR_NAME,
        ADDR
        FROM fms_spe_supplier_line
        WHERE SUPPLIER_ID = #{supplierId}
    </select>

    <select id="queryContactPerson" parameterType="clb.core.supplier.dto.SpeSupplierLine" resultMap="AddrResultMap" >
        SELECT sct.meaning CONTRACT_PERSON
        FROM sys_code_value_b scvb
        JOIN sys_code_b scb
        ON scb.code_id = scvb.code_id
        AND scb. CODE = 'ORD.ORDER_CONTACT_PERSON'
        LEFT OUTER JOIN sys_code_value_tl sct
        ON (scvb.code_value_id = sct.code_value_id AND sct.lang = #{request.locale,jdbcType=VARCHAR})
        UNION ALL
        SELECT CONTRACT_PERSON
        FROM fms_spe_supplier_line
        WHERE SUPPLIER_ID = #{supplierId}
        AND CONTRACT_NUM IS NOT NULL
    </select>

    <select id="queryContactPhone" parameterType="clb.core.supplier.dto.SpeSupplierLine" resultMap="AddrResultMap" >

        SELECT sct.meaning CONTRACT_NUM
        FROM sys_code_value_b scvb
        JOIN sys_code_b scb
        ON scb.code_id = scvb.code_id
        AND scb. CODE = 'ORD.ORDER_CONTACT_PHONE'
        LEFT OUTER JOIN sys_code_value_tl sct
        ON (scvb.code_value_id = sct.code_value_id AND sct.lang = #{request.locale,jdbcType=VARCHAR})
        UNION ALL
        SELECT CONTRACT_NUM
        FROM fms_spe_supplier_line
        WHERE SUPPLIER_ID = #{supplierId}
         AND CONTRACT_NUM IS NOT NULL
    </select>
    
    <select id="querySublineItemName" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap" >
        SELECT 
		foo.*,
		fpis.SUBLINE_ITEM_NAME
		from fms_ord_order foo
		LEFT JOIN fms_prd_item_subline fpis on foo.SUBLINE_ID = fpis.SUBLINE_ID
		<where>
			<if test="orderId != null">
				AND foo.ORDER_ID = #{orderId}
			</if>
		</where>
    </select>
    
    <!-- 查询所有订单信息 -->
    <select id="selectOrdOrder" resultMap="BaseResultMap">
        SELECT 
       foo.*,
       fpi.ITEM_NAME,
       fpi.MID_CLASS,
       fss.`NAME`,
       fpis.SUBLINE_ITEM_NAME,
       fcca.FIXED_ASSETS APPLICANT_FIXED_ASSETS,
       fcca.CHINESE_NAME APPLICANT_CHINESE_NAME,
       fcca.ENGLISH_NAME APPLICANT_ENGLISH_NAME,
       fcca.SEX APPLICANT_SEX,
       fcca.BIRTH_DATE APPLICANT_BIRTH_DATE,
       fcca.IDENTITY_NUMBER APPLICANT_IDENTITY_NUMBER,  
       fcca.NATIONALITY APPLICANT_NATIONALITY,
       fcca.CITY  APPLICANT_CITY,
       fcca.MARRIAGE_STATUS  APPLICANT_MARRIAGE_STATUS,
       fcca.PHONE_CODE APPLICANT_PHONE_CODE,
       fcca.PHONE APPLICANT_PHONE, 
       fcca.EMAIL APPLICANT_EMAIL,
       fcca.POST_ADDRESS APPLICANT_POST_ADDRESS,
       fcca.POST_NATION APPLICANT_POST_NATION, 
       fcca.POST_PROVINCE APPLICANT_POST_PROVINCE, 
       fcca.POST_CITY APPLICANT_POST_CITY,
       fcci.POST_NATION INSURANT_POST_NATION, 
       fcci.POST_PROVINCE INSURANT_POST_PROVINCE, 
       fcci.POST_CITY INSURANT_POST_CITY,
       fcca.JOB APPLICANT_JOB,
       fcca.INDUSTRY APPLICANT_INDUSTRY,
       fcca.POSITION APPLICANT_POSITION,
       fcca.COMPANY_ADDRESS APPLICANT_COMPANY_ADDRESS,
       fcca.IDENTITY_NATION APPLICANT_IDENTITY_NATION,
       fcca.IDENTITY_PROVINCE APPLICANT_IDENTITY_PROVINCE, 
       fcca.IDENTITY_CITY APPLICANT_IDENTITY_CITY,
       fcci.IDENTITY_PROVINCE INSURANT_IDENTITY_PROVINCE, 
       fcci.IDENTITY_CITY INSURANT_IDENTITY_CITY,
       fcca.COMPANY_NATION APPLICANT_COMPANY_NATION, 
       fcca.COMPANY_PROVINCE APPLICANT_COMPANY_PROVINCE,
       fcca.COMPANY_CITY APPLICANT_COMPANY_CITY,
       fcci.COMPANY_NATION INSURANT_COMPANY_NATION, 
       fcci.COMPANY_PROVINCE INSURANT_COMPANY_PROVINCE,
       fcci.COMPANY_CITY INSURANT_COMPANY_CITY,
       fcca.AMERICAN_CITIZEN_FLAG APPLICANT_AMERICAN_CITIZEN_FLAG,
       fcca.AMERICAN_CITIZEN_FLAG APPLICANT_AMERICAN_CITIZEN_FLAG,
       fcca.IDENTITY_ADDRESS APPLICANT_IDENTITY_ADDRESS,
       fcca.INCOME*12 APPLICANT_INCOME,
       fcca.SMOKE_FLAG APPLICANT_SMOKE_FLAG, 
       fcca.DRINK_FLAG APPLICANT_DRINK_FLAG,
       fcca.HEIGHT APPLICANT_HEIGHT,
       fcca.WEIGHT APPLICANT_WEIGHT,
       fcca.COMPANY_NAME APPLICANT_COMPANY_NAME,
       fcca.DANGEROUS_FLAG APPLICANT_DANGEROUS_FLAG,
       fcca.ABROAD_FLAG APPLICANT_ABROAD_FLAG,
       fcca.EDUCATION APPLICANT_EDUCATION,
       fcca.CURRENT_ASSETS APPLICANT_CURRENT_ASSETS,
       fcca.AMOUNT_PER_MONTH APPLICANT_AMOUNT_PER_MONTH,
       fcca.LIABILITIES APPLICANT_LIABILITIES,
       fcci.CURRENT_ASSETS INSURANT_CURRENT_ASSETS,
       fcci.EDUCATION INSURANT_EDUCATION,
       fcci.INDUSTRY INSURANT_INDUSTRY,
       fcci.COMPANY_NAME INSURANT_COMPANY_NAME,
       fcci.DANGEROUS_FLAG INSURANT_DANGEROUS_FLAG,
       fcci.ABROAD_FLAG INSURANT_ABROAD_FLAG,
       fcci.HEIGHT INSURANT_HEIGHT,
       fcci.WEIGHT INSURANT_WEIGHT,
       fcci.CHINESE_NAME INSURANT_CHINESE_NAME,
       fcci.ENGLISH_NAME INSURANT_ENGLISH_NAME,
       fcci.SEX INSURANT_SEX,
       fcci.BIRTH_DATE INSURANT_BIRTH_DATE,
       fcci.IDENTITY_NUMBER INSURANT_IDENTITY_NUMBER,  
       fcci.NATIONALITY INSURANT_NATIONALITY,
       fcci.CITY  INSURANT_CITY,
       fcci.MARRIAGE_STATUS  INSURANT_MARRIAGE_STATUS,
       fcci.PHONE_CODE INSURANT_PHONE_CODE,
       fcci.PHONE INSURANT_PHONE, 
       fcci.EMAIL INSURANT_EMAIL,
       fcci.POST_ADDRESS INSURANT_POST_ADDRESS,
       fcci.JOB INSURANT_JOB,
       fcci.POSITION INSURANT_POSITION,
       fcci.COMPANY_ADDRESS INSURANT_COMPANY_ADDRESS,
       fcci.AMERICAN_CITIZEN_FLAG INSURANT_AMERICAN_CITIZEN_FLAG,
       fcci.IDENTITY_ADDRESS INSURANT_IDENTITY_ADDRESS,
       fcci.INCOME*12 INSURANT_INCOME,
       fcci.SMOKE_FLAG INSURANT_SMOKE_FLAG, 
       fcci.DRINK_FLAG INSURANT_DRINK_FLAG,
       fcci.IDENTITY_NATION INSURANT_IDENTITY_NATION
       from 
       fms_ord_order foo LEFT JOIN fms_ctm_customer fcca ON foo.APPLICANT_CUSTOMER_ID = fcca.CUSTOMER_ID
       LEFT JOIN fms_ctm_customer fcci ON foo.INSURANT_CUSTOMER_ID = fcci.CUSTOMER_ID
       LEFT JOIN fms_prd_items fpi on foo.ITEM_ID = fpi.ITEM_ID
       LEFT JOIN fms_prd_item_subline fpis on foo.SUBLINE_ID = fpis.SUBLINE_ID
       LEFT JOIN fms_spe_supplier fss on foo.PRODUCT_SUPPLIER_ID = fss.SUPPLIER_ID
       <where>
			<if test="orderId != null">
				AND foo.ORDER_ID = #{orderId}
			</if>
		</where>
    </select>

    <resultMap id="ClassAmountResultMap" type="clb.core.production.dto.PrdItems">
        <result column="BIG_CLASS" property="bigClass" jdbcType="VARCHAR" />
        <result column="MID_CLASS" property="midClass" jdbcType="VARCHAR" />
        <result column="BIG_CLASS_NAME" property="bigClassName" jdbcType="VARCHAR" />
        <result column="MID_CLASS_NAME" property="midClassName" jdbcType="VARCHAR" />
        <result column="ORDER_AMOUNT" property="orderAmount" jdbcType="DECIMAL" />
    </resultMap>

    <select id="queryClassAmount" parameterType="clb.core.production.dto.PrdItems" resultMap="ClassAmountResultMap">
        SELECT
        fpi.BIG_CLASS,
        fpi.MID_CLASS,
        (SELECT scv.MEANING
        FROM sys_code_b scb,
        sys_code_value_b scv
        WHERE scb.code_id = scv.code_id
        AND scb.CODE = (
        SELECT fpcs.class_name1_code
        FROM fms_prd_class_set fpcs
        WHERE fpcs.set_code = 'PRODUCTION_CLASS' )
        AND scv.VALUE = fpi.BIG_CLASS ) BIG_CLASS_NAME,
        (SELECT scv.MEANING
        from sys_code_b scb,
        sys_code_value_b scv
        where scb.code_id = scv.code_id
        and scb.code = (
        select fpcs.class_name2_code
        from fms_prd_class_set fpcs
        where fpcs.set_code = 'PRODUCTION_CLASS')
        AND scv.VALUE = fpi.MID_CLASS ) MID_CLASS_NAME,
        SUM(
        CASE foo.ORDER_TYPE
        WHEN 'INSURANCE' THEN
        foo.YEAR_PAY_AMOUNT
        ELSE
        foo.POLICY_AMOUNT
        END * CASE
        WHEN ffer.RATE IS NULL THEN
        1
        ELSE
        ffer.RATE
        END) ORDER_AMOUNT
        FROM
        fms_ord_order foo
        JOIN fms_prd_items fpi ON fpi.ITEM_ID = foo.ITEM_ID
        LEFT JOIN fms_fet_exchange_rate ffer ON (
        ffer.BASE_CURRENCY = 'HKD'
        AND ffer.FOREIGN_CURRENCY = foo.CURRENCY
        AND CASE foo.ORDER_TYPE
        WHEN 'INSURANCE' THEN
        foo.EFFECTIVE_DATE
        WHEN 'BOND' THEN
        foo.ISSUE_DATE
        WHEN 'IMMIGRANT' THEN
        foo.RESERVE_DATE
        END BETWEEN ffer.EFFECTIVE_DATE_FROM
        AND ffer.EFFECTIVE_DATE_TO)
        WHERE
        fpi.BIG_CLASS IN ('BX', 'ZQ', 'DC')
        AND CASE foo.ORDER_TYPE
            WHEN 'INSURANCE' THEN
            'POLICY_EFFECTIVE'
            WHEN 'BOND' THEN
            'ISSUE_SUCCESS'
            WHEN 'IMMIGRANT' THEN
            'BUY_SUCCESS'
            END = foo. STATUS
        AND CASE foo.ORDER_TYPE
            WHEN 'INSURANCE' THEN
            foo.EFFECTIVE_DATE
            WHEN 'BOND' THEN
            foo.ISSUE_DATE
            WHEN 'IMMIGRANT' THEN
            foo.RESERVE_DATE
            END IS NOT NULL
        <if test="channelId != null">
            AND foo.CHANNEL_ID = #{channelId}
        </if>
        <if test="customerId != null">
            AND foo.APPLICANT_CUSTOMER_ID = #{customerId}
        </if>
        GROUP BY fpi.BIG_CLASS, fpi.MID_CLASS
    </select>
	
	<select id="queryRenewalYear" parameterType="clb.core.order.dto.OrdOrder" resultMap="BaseResultMap">
			SELECT
				fpis.SUBLINE_ITEM_NAME,
				ictm.CHINESE_NAME INSURANT,
				ictm.BIRTH_DATE INSURANT_BIRTH_DATE,
				foo.RENEWAL_YEAR
			FROM
				fms_ord_order foo
			LEFT JOIN fms_prd_item_subline fpis ON fpis.SUBLINE_ID = foo.SUBLINE_ID
			LEFT JOIN fms_ctm_customer ictm ON ictm.CUSTOMER_ID = foo.INSURANT_CUSTOMER_ID
			WHERE foo.ORDER_TYPE = "INSURANCE" AND
				foo.ORDER_ID = #{orderId} 
	</select>

    <select id="getPendingNum" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
	      foo.ORDER_NUMBER
        FROM
            fms_ord_order foo
        LEFT JOIN fms_ord_pending fop ON foo.ORDER_ID = fop.ORDER_ID
        WHERE
            foo.CHANNEL_ID = #{ channelId }
        AND
        (
            (
                foo. STATUS = 'APPROVING'
                AND foo.ORDER_TYPE = 'INSURANCE'
                AND fop. STATUS IS NOT NULL
                OR foo. STATUS = 'pending'
            )
            OR foo.order_type = 'BOND'
            AND foo. STATUS IN (
                'PENDING',
                'PENDING_HANDLING',
                'PENDING_APPROVING'
            )
         );
    </select>

</mapper>