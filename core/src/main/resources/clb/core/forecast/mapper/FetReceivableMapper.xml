<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="clb.core.forecast.mapper.FetReceivableMapper">
    <resultMap id="BaseResultMap" type="clb.core.forecast.dto.FetReceivable">
        <result column="RECEIVABLE_ID" property="receivableId" jdbcType="DECIMAL" />
        <result column="RECEIPT_PERIOD" property="receiptPeriod" jdbcType="VARCHAR" />
        <result column="RECEIPT_TYPE" property="receiptType" jdbcType="VARCHAR" />
        <result column="PAYMENT_COMPANY_TYPE" property="paymentCompanyType" jdbcType="VARCHAR" />
        <result column="RECEIVE_COMPANY_TYPE" property="receiveCompanyType" jdbcType="VARCHAR" />
        <result column="PAYMENT_COMPANY_ID" property="paymentCompanyId" jdbcType="DECIMAL" />
        <result column="RECEIVE_COMPANY_ID" property="receiveCompanyId" jdbcType="DECIMAL" />
        <result column="ORDER_ID" property="orderId" jdbcType="DECIMAL" />
        <result column="ITEM_ID" property="itemId" jdbcType="DECIMAL" />
        <result column="ORDER_CURRENCY" property="orderCurrency" jdbcType="VARCHAR" />
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
        <result column="RATE" property="rate" jdbcType="DECIMAL" />
        <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DECIMAL" />
        <result column="HKD_AMOUNT" property="hkdAmount" jdbcType="DECIMAL" />
        <result column="DUE_DATE" property="dueDate" jdbcType="DATE" />
        <result column="VERSION" property="version" jdbcType="DECIMAL" />
        <result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
        <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
        <result column="BASE_DATE" property="baseDate" jdbcType="DATE"/>
        <result column="ORDER_TYPE" property="orderType" jdbcType="DATE"/>
        <result column="PAYMENT_COMPANY_NAME" property="paymentCompanyName" jdbcType="VARCHAR" />
        <result column="RECEIVE_COMPANY_NAME" property="receiveCompanyName" jdbcType="VARCHAR" />
        <result column="ITEM_NAME" property="itemName" jdbcType="VARCHAR" />
        <result column="SUBLINE_ITEM_NAME" property="contributionPeriod" jdbcType="VARCHAR" />
        <result column="APPLICANT_NAME" property="applicantName" jdbcType="VARCHAR" />
        <result column="PERIOD_ID" property="periodId" jdbcType="DECIMAL" />
        <result column="OBJECT_VERSION_NUMBER" property="objectVersionNumber" jdbcType="DECIMAL"/>
    </resultMap>
    
    <select id="getData" parameterType="clb.core.forecast.dto.FetReceivable" resultMap="BaseResultMap">
     			SELECT
					ffre.*, 
					foo.ORDER_NUMBER,
					fpi.ITEM_NAME,
					(
					CASE
					WHEN foo.ORDER_TYPE = 'INSURANCE' THEN
						fpis.SUBLINE_ITEM_NAME
					WHEN foo.ORDER_TYPE = 'BOND' or foo.ORDER_TYPE = 'IMMIGRANT' THEN
						'1'
					END
					) SUBLINE_ITEM_NAME,
					(
					CASE
					WHEN foo.ORDER_TYPE = 'INSURANCE' THEN
						foo.EXPECT_COOL_DATE
					WHEN foo.ORDER_TYPE = 'BOND' or foo.ORDER_TYPE = 'IMMIGRANT' THEN
						foo.ISSUE_DATE
					END
					) BASE_DATE,
					foo.ORDER_TYPE,
					fcc.CHINESE_NAME APPLICANT_NAME
				FROM
					fms_fet_receivable ffre
					LEFT JOIN fms_ord_order foo on ffre.ORDER_ID = foo.ORDER_ID
					LEFT JOIN fms_prd_items fpi on ffre.ITEM_ID = fpi.ITEM_ID
					LEFT JOIN fms_prd_item_subline fpis on foo.SUBLINE_ID = fpis.SUBLINE_ID
					LEFT JOIN fms_ctm_customer fcc on fcc.CUSTOMER_ID = foo.APPLICANT_CUSTOMER_ID
				<where>
				<if test="receiptType != null">
					AND ffre.RECEIPT_TYPE = #{receiptType}
				</if>
				<if test="version != null">
					AND ffre.VERSION = #{version}
				</if>
				<if test="receiptPeriod != null">
					AND ffre.RECEIPT_PERIOD = #{receiptPeriod}
				</if>
				<if test="comments != null">
					AND ffre.COMMENTS like CONCAT(CONCAT('%',#{comments}),'%')
				</if>
				<if test="paymentCompanyType != null">
					AND ffre.PAYMENT_COMPANY_TYPE = #{paymentCompanyType}
				</if>
				<if test="receiveCompanyType != null">
					AND ffre.RECEIVE_COMPANY_TYPE = #{receiveCompanyType}
				</if>
				<if test="paymentCompanyId != null">
					AND ffre.PAYMENT_COMPANY_ID = #{paymentCompanyId}
				</if>
				<if test="receiveCompanyId != null">
					AND ffre.RECEIVE_COMPANY_ID = #{receiveCompanyId}
				</if>
				<if test="orderNumber != null">
					AND ffre.ORDER_ID in (
						select foo.ORDER_ID
						from fms_ord_order foo
						where foo.ORDER_NUMBER like CONCAT(CONCAT('%',#{orderNumber}),'%')
					)
				</if>
				</where>
     </select>

	<select id="summaryQuery"  parameterType="clb.core.forecast.dto.FetReceivable" resultMap="BaseResultMap">
		SELECT
			ffre.RECEIPT_PERIOD,
			ffpd.PERIOD_ID,
			ffre.VERSION,
			ffre.PAYMENT_COMPANY_TYPE,
			ffre.RECEIVE_COMPANY_TYPE,
			ffre.PAYMENT_COMPANY_ID,
			ffre.RECEIVE_COMPANY_ID,
			(CASE WHEN pfss.NAME != '' THEN pfss.NAME  
	              WHEN pfcc.CHANNEL_NAME != '' THEN pfcc.CHANNEL_NAME
					END)PAYMENT_COMPANY_NAME,
			(CASE WHEN rfss.NAME != '' THEN rfss.`NAME`  
	              WHEN rfcc.CHANNEL_NAME != '' THEN rfcc.CHANNEL_NAME
					END)RECEIVE_COMPANY_NAME,
			sum(ffre.HKD_AMOUNT) HKD_AMOUNT
		FROM
			fms_fet_receivable ffre
		left join fms_spe_supplier  pfss on (pfss.SUPPLIER_ID = ffre.PAYMENT_COMPANY_ID and ffre.PAYMENT_COMPANY_TYPE = 'SUPPLIER')
	    left join fms_cnl_channel  pfcc on (pfcc.CHANNEL_ID = ffre.PAYMENT_COMPANY_ID and ffre.PAYMENT_COMPANY_TYPE = 'CHANNEL')
		left join fms_spe_supplier  rfss on (rfss.SUPPLIER_ID = ffre.RECEIVE_COMPANY_ID and ffre.RECEIVE_COMPANY_TYPE = 'SUPPLIER')
	    left join fms_cnl_channel  rfcc on (rfcc.CHANNEL_ID = ffre.RECEIVE_COMPANY_ID and ffre.RECEIVE_COMPANY_TYPE = 'CHANNEL')
	    JOIN fms_fet_period_head ffph on (
					ffph.PARTY_TYPE = ffre.PAYMENT_COMPANY_TYPE
					and ffph.PARTY_ID = ffre.PAYMENT_COMPANY_ID
			)
	    JOIN fms_fet_period ffpd ON (
					ffpd.PERIOD_NAME = ffre.RECEIPT_PERIOD
					and ffpd.HEAD_ID = ffph.HEAD_ID
			)
		<where>
				<if test="paramStatus != null">
					((pfss.STATUS_CODE=#{paramStatus} or pfcc.STATUS_CODE=#{paramStatus})
						AND (rfss.STATUS_CODE=#{paramStatus} or rfcc.STATUS_CODE=#{paramStatus}))
				</if>
				<if test="receiptPeriod != null">
					AND ffre.RECEIPT_PERIOD = #{receiptPeriod}
				</if>
				<if test="receiveCompanyName != null">
					AND (rfss.NAME like  CONCAT(CONCAT('%',#{receiveCompanyName}),'%') or rfcc.CHANNEL_NAME like  CONCAT(CONCAT('%',#{receiveCompanyName}),'%'))
				</if>
				<if test="paymentCompanyName != null">
					AND (pfss.NAME like  CONCAT(CONCAT('%',#{paymentCompanyName}),'%') or pfcc.CHANNEL_NAME like  CONCAT(CONCAT('%',#{paymentCompanyName}),'%'))
				</if>
				<if test="receiveCompanyType != null">
					AND ffre.RECEIVE_COMPANY_TYPE = #{receiveCompanyType}
				</if>
				<if test="receiveCompanyId != null">
					AND ffre.RECEIVE_COMPANY_ID = #{receiveCompanyId}			
				</if>
				<if test="paymentCompanyType != null">
					AND ffre.PAYMENT_COMPANY_TYPE = #{paymentCompanyType}
				</if>
				<if test="paymentCompanyId != null">
					AND ffre.PAYMENT_COMPANY_ID = #{paymentCompanyId}			
				</if>
		</where>
		group by 
		ffre.RECEIPT_PERIOD,
		ffpd.PERIOD_ID,
		ffre.VERSION,
		ffre.PAYMENT_COMPANY_TYPE,
		ffre.RECEIVE_COMPANY_TYPE,
		ffre.PAYMENT_COMPANY_ID,
		ffre.RECEIVE_COMPANY_ID,
		PAYMENT_COMPANY_NAME,
		RECEIVE_COMPANY_NAME
		order by ffre.VERSION desc
	</select>

	<!-- 批量插入方法 -->
	<insert id="batchInsert" parameterType="java.util.List">
		insert into fms_fet_receivable
		(
			receipt_period,
			payment_company_type,
			receive_company_type,
			payment_company_id,
			receive_company_id,
			receipt_type,
			order_id,
			item_id,
			order_currency,
			amount,
			rate,
			exchange_rate,
			hkd_amount,
			due_date,
			version,
			comments,
			program_id,
			request_id
		) values
		<foreach collection="list" index="index" item="i" separator=",">
			(
				#{i.receiptPeriod},
				#{i.paymentCompanyType},
				#{i.receiveCompanyType},
				#{i.paymentCompanyId},
				#{i.receiveCompanyId},
				#{i.receiptType},
				#{i.orderId},
				#{i.itemId},
				#{i.orderCurrency},
				#{i.amount},
				#{i.rate},
				#{i.exchangeRate},
				#{i.hkdAmount},
				#{i.dueDate},
				#{i.version},
				#{i.comments},
				#{i.programId},
				#{i.requestId}
			)
		</foreach>
	</insert>


</mapper>